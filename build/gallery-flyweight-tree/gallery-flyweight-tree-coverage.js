if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-flyweight-tree/gallery-flyweight-tree.js']) {
   __coverage__['build/gallery-flyweight-tree/gallery-flyweight-tree.js'] = {"path":"build/gallery-flyweight-tree/gallery-flyweight-tree.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":34},"end":{"line":1,"column":53}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":28}}},"3":{"name":"(anonymous_3)","line":146,"loc":{"start":{"line":146,"column":20},"end":{"line":146,"column":32}}},"4":{"name":"(anonymous_4)","line":155,"loc":{"start":{"line":155,"column":20},"end":{"line":155,"column":32}}},"5":{"name":"(anonymous_5)","line":157,"loc":{"start":{"line":157,"column":32},"end":{"line":157,"column":54}}},"6":{"name":"(anonymous_6)","line":158,"loc":{"start":{"line":158,"column":35},"end":{"line":158,"column":53}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":44},"end":{"line":164,"column":64}}},"8":{"name":"(anonymous_8)","line":192,"loc":{"start":{"line":192,"column":21},"end":{"line":192,"column":37}}},"9":{"name":"(anonymous_9)","line":204,"loc":{"start":{"line":204,"column":20},"end":{"line":204,"column":43}}},"10":{"name":"(anonymous_10)","line":206,"loc":{"start":{"line":206,"column":46},"end":{"line":206,"column":66}}},"11":{"name":"(anonymous_11)","line":227,"loc":{"start":{"line":227,"column":18},"end":{"line":227,"column":30}}},"12":{"name":"(anonymous_12)","line":238,"loc":{"start":{"line":238,"column":16},"end":{"line":238,"column":27}}},"13":{"name":"(anonymous_13)","line":243,"loc":{"start":{"line":243,"column":45},"end":{"line":243,"column":62}}},"14":{"name":"(anonymous_14)","line":263,"loc":{"start":{"line":263,"column":14},"end":{"line":263,"column":34}}},"15":{"name":"(anonymous_15)","line":283,"loc":{"start":{"line":283,"column":19},"end":{"line":283,"column":31}}},"16":{"name":"(anonymous_16)","line":284,"loc":{"start":{"line":284,"column":30},"end":{"line":284,"column":45}}},"17":{"name":"(anonymous_17)","line":294,"loc":{"start":{"line":294,"column":21},"end":{"line":294,"column":33}}},"18":{"name":"(anonymous_18)","line":295,"loc":{"start":{"line":295,"column":30},"end":{"line":295,"column":45}}},"19":{"name":"(anonymous_19)","line":312,"loc":{"start":{"line":312,"column":19},"end":{"line":312,"column":42}}},"20":{"name":"(anonymous_20)","line":319,"loc":{"start":{"line":319,"column":25},"end":{"line":319,"column":41}}},"21":{"name":"(anonymous_21)","line":326,"loc":{"start":{"line":326,"column":30},"end":{"line":326,"column":46}}},"22":{"name":"(anonymous_22)","line":344,"loc":{"start":{"line":344,"column":24},"end":{"line":344,"column":37}}},"23":{"name":"(anonymous_23)","line":358,"loc":{"start":{"line":358,"column":24},"end":{"line":358,"column":41}}},"24":{"name":"(anonymous_24)","line":385,"loc":{"start":{"line":385,"column":20},"end":{"line":385,"column":36}}},"25":{"name":"(anonymous_25)","line":413,"loc":{"start":{"line":413,"column":21},"end":{"line":413,"column":39}}},"26":{"name":"(anonymous_26)","line":438,"loc":{"start":{"line":438,"column":21},"end":{"line":438,"column":38}}},"27":{"name":"(anonymous_27)","line":466,"loc":{"start":{"line":466,"column":17},"end":{"line":466,"column":29}}},"28":{"name":"(anonymous_28)","line":476,"loc":{"start":{"line":476,"column":29},"end":{"line":476,"column":42}}},"29":{"name":"(anonymous_29)","line":479,"loc":{"start":{"line":479,"column":23},"end":{"line":479,"column":40}}},"30":{"name":"(anonymous_30)","line":506,"loc":{"start":{"line":506,"column":29},"end":{"line":506,"column":43}}},"31":{"name":"(anonymous_31)","line":525,"loc":{"start":{"line":525,"column":23},"end":{"line":525,"column":43}}},"32":{"name":"(anonymous_32)","line":527,"loc":{"start":{"line":527,"column":23},"end":{"line":527,"column":46}}},"33":{"name":"(anonymous_33)","line":528,"loc":{"start":{"line":528,"column":57},"end":{"line":528,"column":85}}},"34":{"name":"(anonymous_34)","line":548,"loc":{"start":{"line":548,"column":22},"end":{"line":548,"column":43}}},"35":{"name":"(anonymous_35)","line":552,"loc":{"start":{"line":552,"column":30},"end":{"line":552,"column":55}}},"36":{"name":"(anonymous_36)","line":553,"loc":{"start":{"line":553,"column":43},"end":{"line":553,"column":75}}},"37":{"name":"(anonymous_37)","line":570,"loc":{"start":{"line":570,"column":28},"end":{"line":570,"column":40}}},"38":{"name":"(anonymous_38)","line":580,"loc":{"start":{"line":580,"column":28},"end":{"line":580,"column":45}}},"39":{"name":"(anonymous_39)","line":595,"loc":{"start":{"line":595,"column":23},"end":{"line":595,"column":40}}},"40":{"name":"(anonymous_40)","line":599,"loc":{"start":{"line":599,"column":25},"end":{"line":599,"column":42}}},"41":{"name":"(anonymous_41)","line":633,"loc":{"start":{"line":633,"column":30},"end":{"line":633,"column":47}}},"42":{"name":"(anonymous_42)","line":741,"loc":{"start":{"line":741,"column":21},"end":{"line":741,"column":36}}},"43":{"name":"(anonymous_43)","line":754,"loc":{"start":{"line":754,"column":24},"end":{"line":754,"column":36}}},"44":{"name":"(anonymous_44)","line":756,"loc":{"start":{"line":756,"column":39},"end":{"line":756,"column":52}}},"45":{"name":"(anonymous_45)","line":780,"loc":{"start":{"line":780,"column":18},"end":{"line":780,"column":52}}},"46":{"name":"(anonymous_46)","line":799,"loc":{"start":{"line":799,"column":42},"end":{"line":799,"column":74}}},"47":{"name":"(anonymous_47)","line":835,"loc":{"start":{"line":835,"column":18},"end":{"line":835,"column":35}}},"48":{"name":"(anonymous_48)","line":847,"loc":{"start":{"line":847,"column":21},"end":{"line":847,"column":33}}},"49":{"name":"(anonymous_49)","line":860,"loc":{"start":{"line":860,"column":25},"end":{"line":860,"column":45}}},"50":{"name":"(anonymous_50)","line":866,"loc":{"start":{"line":866,"column":38},"end":{"line":866,"column":69}}},"51":{"name":"(anonymous_51)","line":880,"loc":{"start":{"line":880,"column":27},"end":{"line":880,"column":41}}},"52":{"name":"(anonymous_52)","line":896,"loc":{"start":{"line":896,"column":25},"end":{"line":896,"column":42}}},"53":{"name":"(anonymous_53)","line":913,"loc":{"start":{"line":913,"column":30},"end":{"line":913,"column":44}}},"54":{"name":"(anonymous_54)","line":946,"loc":{"start":{"line":946,"column":22},"end":{"line":946,"column":34}}},"55":{"name":"(anonymous_55)","line":959,"loc":{"start":{"line":959,"column":28},"end":{"line":959,"column":48}}},"56":{"name":"(anonymous_56)","line":984,"loc":{"start":{"line":984,"column":25},"end":{"line":984,"column":39}}},"57":{"name":"(anonymous_57)","line":989,"loc":{"start":{"line":989,"column":33},"end":{"line":989,"column":65}}},"58":{"name":"(anonymous_58)","line":1001,"loc":{"start":{"line":1001,"column":14},"end":{"line":1001,"column":26}}},"59":{"name":"(anonymous_59)","line":1015,"loc":{"start":{"line":1015,"column":17},"end":{"line":1015,"column":29}}},"60":{"name":"(anonymous_60)","line":1027,"loc":{"start":{"line":1027,"column":19},"end":{"line":1027,"column":30}}},"61":{"name":"(anonymous_61)","line":1038,"loc":{"start":{"line":1038,"column":24},"end":{"line":1038,"column":35}}},"62":{"name":"(anonymous_62)","line":1054,"loc":{"start":{"line":1054,"column":28},"end":{"line":1054,"column":39}}},"63":{"name":"(anonymous_63)","line":1068,"loc":{"start":{"line":1068,"column":15},"end":{"line":1068,"column":26}}},"64":{"name":"(anonymous_64)","line":1076,"loc":{"start":{"line":1076,"column":14},"end":{"line":1076,"column":26}}},"65":{"name":"(anonymous_65)","line":1084,"loc":{"start":{"line":1084,"column":16},"end":{"line":1084,"column":27}}},"66":{"name":"(anonymous_66)","line":1092,"loc":{"start":{"line":1092,"column":16},"end":{"line":1092,"column":27}}},"67":{"name":"(anonymous_67)","line":1100,"loc":{"start":{"line":1100,"column":18},"end":{"line":1100,"column":29}}},"68":{"name":"(anonymous_68)","line":1108,"loc":{"start":{"line":1108,"column":16},"end":{"line":1108,"column":27}}},"69":{"name":"(anonymous_69)","line":1121,"loc":{"start":{"line":1121,"column":23},"end":{"line":1121,"column":45}}},"70":{"name":"(anonymous_70)","line":1241,"loc":{"start":{"line":1241,"column":24},"end":{"line":1241,"column":35}}},"71":{"name":"(anonymous_71)","line":1277,"loc":{"start":{"line":1277,"column":27},"end":{"line":1277,"column":39}}},"72":{"name":"(anonymous_72)","line":1291,"loc":{"start":{"line":1291,"column":24},"end":{"line":1291,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1317,"column":76}},"2":{"start":{"line":35,"column":0},"end":{"line":35,"column":13}},"3":{"start":{"line":37,"column":0},"end":{"line":59,"column":11}},"4":{"start":{"line":55,"column":8},"end":{"line":55,"column":43}},"5":{"start":{"line":87,"column":0},"end":{"line":694,"column":7}},"6":{"start":{"line":147,"column":12},"end":{"line":147,"column":28}},"7":{"start":{"line":148,"column":12},"end":{"line":148,"column":36}},"8":{"start":{"line":156,"column":12},"end":{"line":156,"column":34}},"9":{"start":{"line":157,"column":12},"end":{"line":162,"column":15}},"10":{"start":{"line":158,"column":16},"end":{"line":160,"column":19}},"11":{"start":{"line":159,"column":20},"end":{"line":159,"column":37}},"12":{"start":{"line":161,"column":16},"end":{"line":161,"column":33}},"13":{"start":{"line":163,"column":12},"end":{"line":163,"column":30}},"14":{"start":{"line":164,"column":12},"end":{"line":166,"column":15}},"15":{"start":{"line":165,"column":16},"end":{"line":165,"column":34}},"16":{"start":{"line":167,"column":12},"end":{"line":167,"column":38}},"17":{"start":{"line":193,"column":12},"end":{"line":195,"column":14}},"18":{"start":{"line":196,"column":12},"end":{"line":196,"column":40}},"19":{"start":{"line":205,"column":12},"end":{"line":205,"column":28}},"20":{"start":{"line":206,"column":12},"end":{"line":218,"column":15}},"21":{"start":{"line":207,"column":16},"end":{"line":210,"column":17}},"22":{"start":{"line":208,"column":20},"end":{"line":208,"column":43}},"23":{"start":{"line":209,"column":20},"end":{"line":209,"column":52}},"24":{"start":{"line":211,"column":16},"end":{"line":213,"column":17}},"25":{"start":{"line":212,"column":20},"end":{"line":212,"column":47}},"26":{"start":{"line":214,"column":16},"end":{"line":214,"column":44}},"27":{"start":{"line":215,"column":16},"end":{"line":215,"column":48}},"28":{"start":{"line":217,"column":16},"end":{"line":217,"column":39}},"29":{"start":{"line":228,"column":12},"end":{"line":228,"column":38}},"30":{"start":{"line":229,"column":12},"end":{"line":229,"column":48}},"31":{"start":{"line":230,"column":12},"end":{"line":230,"column":27}},"32":{"start":{"line":239,"column":12},"end":{"line":239,"column":28}},"33":{"start":{"line":241,"column":12},"end":{"line":241,"column":75}},"34":{"start":{"line":242,"column":12},"end":{"line":246,"column":13}},"35":{"start":{"line":243,"column":16},"end":{"line":245,"column":19}},"36":{"start":{"line":244,"column":20},"end":{"line":244,"column":90}},"37":{"start":{"line":264,"column":12},"end":{"line":264,"column":33}},"38":{"start":{"line":265,"column":12},"end":{"line":272,"column":13}},"39":{"start":{"line":266,"column":16},"end":{"line":266,"column":55}},"40":{"start":{"line":267,"column":16},"end":{"line":267,"column":65}},"41":{"start":{"line":268,"column":16},"end":{"line":270,"column":17}},"42":{"start":{"line":269,"column":20},"end":{"line":269,"column":46}},"43":{"start":{"line":271,"column":16},"end":{"line":271,"column":27}},"44":{"start":{"line":273,"column":12},"end":{"line":273,"column":64}},"45":{"start":{"line":284,"column":12},"end":{"line":286,"column":15}},"46":{"start":{"line":285,"column":16},"end":{"line":285,"column":41}},"47":{"start":{"line":295,"column":12},"end":{"line":297,"column":15}},"48":{"start":{"line":296,"column":16},"end":{"line":296,"column":42}},"49":{"start":{"line":313,"column":12},"end":{"line":313,"column":33}},"50":{"start":{"line":314,"column":12},"end":{"line":325,"column":13}},"51":{"start":{"line":316,"column":20},"end":{"line":316,"column":30}},"52":{"start":{"line":317,"column":20},"end":{"line":317,"column":26}},"53":{"start":{"line":319,"column":20},"end":{"line":321,"column":22}},"54":{"start":{"line":320,"column":24},"end":{"line":320,"column":56}},"55":{"start":{"line":322,"column":20},"end":{"line":322,"column":26}},"56":{"start":{"line":324,"column":20},"end":{"line":324,"column":32}},"57":{"start":{"line":326,"column":12},"end":{"line":333,"column":15}},"58":{"start":{"line":327,"column":16},"end":{"line":331,"column":17}},"59":{"start":{"line":328,"column":20},"end":{"line":328,"column":33}},"60":{"start":{"line":329,"column":20},"end":{"line":329,"column":33}},"61":{"start":{"line":330,"column":20},"end":{"line":330,"column":32}},"62":{"start":{"line":332,"column":16},"end":{"line":332,"column":29}},"63":{"start":{"line":334,"column":12},"end":{"line":334,"column":25}},"64":{"start":{"line":345,"column":12},"end":{"line":345,"column":34}},"65":{"start":{"line":346,"column":12},"end":{"line":348,"column":13}},"66":{"start":{"line":347,"column":16},"end":{"line":347,"column":75}},"67":{"start":{"line":359,"column":12},"end":{"line":359,"column":34}},"68":{"start":{"line":360,"column":12},"end":{"line":362,"column":13}},"69":{"start":{"line":361,"column":16},"end":{"line":361,"column":36}},"70":{"start":{"line":363,"column":12},"end":{"line":368,"column":13}},"71":{"start":{"line":364,"column":16},"end":{"line":366,"column":17}},"72":{"start":{"line":365,"column":20},"end":{"line":365,"column":74}},"73":{"start":{"line":367,"column":16},"end":{"line":367,"column":31}},"74":{"start":{"line":369,"column":12},"end":{"line":369,"column":29}},"75":{"start":{"line":370,"column":12},"end":{"line":372,"column":13}},"76":{"start":{"line":371,"column":16},"end":{"line":371,"column":66}},"77":{"start":{"line":373,"column":12},"end":{"line":373,"column":24}},"78":{"start":{"line":387,"column":12},"end":{"line":389,"column":50}},"79":{"start":{"line":391,"column":12},"end":{"line":402,"column":13}},"80":{"start":{"line":392,"column":16},"end":{"line":392,"column":40}},"81":{"start":{"line":393,"column":16},"end":{"line":395,"column":17}},"82":{"start":{"line":394,"column":20},"end":{"line":394,"column":49}},"83":{"start":{"line":396,"column":16},"end":{"line":401,"column":17}},"84":{"start":{"line":397,"column":20},"end":{"line":397,"column":40}},"85":{"start":{"line":398,"column":20},"end":{"line":398,"column":43}},"86":{"start":{"line":400,"column":20},"end":{"line":400,"column":53}},"87":{"start":{"line":403,"column":12},"end":{"line":403,"column":57}},"88":{"start":{"line":404,"column":12},"end":{"line":404,"column":26}},"89":{"start":{"line":414,"column":12},"end":{"line":416,"column":50}},"90":{"start":{"line":418,"column":12},"end":{"line":418,"column":34}},"91":{"start":{"line":419,"column":12},"end":{"line":421,"column":13}},"92":{"start":{"line":420,"column":16},"end":{"line":420,"column":23}},"93":{"start":{"line":422,"column":12},"end":{"line":422,"column":33}},"94":{"start":{"line":423,"column":12},"end":{"line":423,"column":39}},"95":{"start":{"line":424,"column":12},"end":{"line":424,"column":36}},"96":{"start":{"line":425,"column":12},"end":{"line":427,"column":13}},"97":{"start":{"line":426,"column":16},"end":{"line":426,"column":34}},"98":{"start":{"line":439,"column":12},"end":{"line":440,"column":61}},"99":{"start":{"line":441,"column":12},"end":{"line":443,"column":13}},"100":{"start":{"line":442,"column":16},"end":{"line":442,"column":31}},"101":{"start":{"line":444,"column":12},"end":{"line":457,"column":13}},"102":{"start":{"line":445,"column":16},"end":{"line":445,"column":48}},"103":{"start":{"line":446,"column":16},"end":{"line":456,"column":17}},"104":{"start":{"line":449,"column":20},"end":{"line":449,"column":41}},"105":{"start":{"line":450,"column":20},"end":{"line":450,"column":99}},"106":{"start":{"line":453,"column":20},"end":{"line":453,"column":42}},"107":{"start":{"line":454,"column":20},"end":{"line":454,"column":44}},"108":{"start":{"line":455,"column":20},"end":{"line":455,"column":35}},"109":{"start":{"line":458,"column":12},"end":{"line":458,"column":24}},"110":{"start":{"line":467,"column":12},"end":{"line":467,"column":54}},"111":{"start":{"line":477,"column":12},"end":{"line":488,"column":18}},"112":{"start":{"line":480,"column":20},"end":{"line":483,"column":21}},"113":{"start":{"line":481,"column":24},"end":{"line":481,"column":38}},"114":{"start":{"line":482,"column":24},"end":{"line":482,"column":36}},"115":{"start":{"line":484,"column":20},"end":{"line":486,"column":21}},"116":{"start":{"line":485,"column":24},"end":{"line":485,"column":65}},"117":{"start":{"line":487,"column":20},"end":{"line":487,"column":33}},"118":{"start":{"line":489,"column":12},"end":{"line":489,"column":67}},"119":{"start":{"line":490,"column":12},"end":{"line":496,"column":13}},"120":{"start":{"line":491,"column":16},"end":{"line":491,"column":34}},"121":{"start":{"line":493,"column":16},"end":{"line":495,"column":17}},"122":{"start":{"line":494,"column":20},"end":{"line":494,"column":33}},"123":{"start":{"line":497,"column":12},"end":{"line":497,"column":24}},"124":{"start":{"line":507,"column":12},"end":{"line":507,"column":69}},"125":{"start":{"line":508,"column":12},"end":{"line":510,"column":13}},"126":{"start":{"line":509,"column":16},"end":{"line":509,"column":46}},"127":{"start":{"line":511,"column":12},"end":{"line":511,"column":24}},"128":{"start":{"line":526,"column":12},"end":{"line":526,"column":34}},"129":{"start":{"line":527,"column":12},"end":{"line":534,"column":14}},"130":{"start":{"line":528,"column":16},"end":{"line":533,"column":19}},"131":{"start":{"line":529,"column":20},"end":{"line":531,"column":21}},"132":{"start":{"line":530,"column":24},"end":{"line":530,"column":36}},"133":{"start":{"line":532,"column":20},"end":{"line":532,"column":54}},"134":{"start":{"line":535,"column":12},"end":{"line":535,"column":39}},"135":{"start":{"line":549,"column":12},"end":{"line":549,"column":34}},"136":{"start":{"line":551,"column":12},"end":{"line":560,"column":43}},"137":{"start":{"line":553,"column":20},"end":{"line":558,"column":23}},"138":{"start":{"line":554,"column":24},"end":{"line":556,"column":25}},"139":{"start":{"line":555,"column":28},"end":{"line":555,"column":40}},"140":{"start":{"line":557,"column":24},"end":{"line":557,"column":62}},"141":{"start":{"line":561,"column":12},"end":{"line":561,"column":27}},"142":{"start":{"line":562,"column":12},"end":{"line":562,"column":23}},"143":{"start":{"line":571,"column":12},"end":{"line":571,"column":62}},"144":{"start":{"line":581,"column":12},"end":{"line":587,"column":13}},"145":{"start":{"line":582,"column":16},"end":{"line":582,"column":75}},"146":{"start":{"line":583,"column":16},"end":{"line":583,"column":45}},"147":{"start":{"line":584,"column":16},"end":{"line":584,"column":32}},"148":{"start":{"line":586,"column":16},"end":{"line":586,"column":49}},"149":{"start":{"line":596,"column":12},"end":{"line":605,"column":18}},"150":{"start":{"line":600,"column":20},"end":{"line":600,"column":42}},"151":{"start":{"line":601,"column":20},"end":{"line":604,"column":21}},"152":{"start":{"line":602,"column":24},"end":{"line":602,"column":38}},"153":{"start":{"line":603,"column":24},"end":{"line":603,"column":85}},"154":{"start":{"line":607,"column":12},"end":{"line":621,"column":13}},"155":{"start":{"line":609,"column":16},"end":{"line":609,"column":85}},"156":{"start":{"line":610,"column":16},"end":{"line":610,"column":26}},"157":{"start":{"line":611,"column":16},"end":{"line":611,"column":37}},"158":{"start":{"line":613,"column":16},"end":{"line":613,"column":30}},"159":{"start":{"line":615,"column":16},"end":{"line":615,"column":81}},"160":{"start":{"line":616,"column":16},"end":{"line":616,"column":27}},"161":{"start":{"line":617,"column":16},"end":{"line":617,"column":35}},"162":{"start":{"line":619,"column":16},"end":{"line":619,"column":43}},"163":{"start":{"line":634,"column":12},"end":{"line":636,"column":13}},"164":{"start":{"line":635,"column":16},"end":{"line":635,"column":49}},"165":{"start":{"line":637,"column":12},"end":{"line":637,"column":25}},"166":{"start":{"line":697,"column":0},"end":{"line":697,"column":31}},"167":{"start":{"line":715,"column":0},"end":{"line":1312,"column":2}},"168":{"start":{"line":742,"column":12},"end":{"line":742,"column":34}},"169":{"start":{"line":743,"column":12},"end":{"line":743,"column":68}},"170":{"start":{"line":744,"column":12},"end":{"line":744,"column":62}},"171":{"start":{"line":746,"column":12},"end":{"line":746,"column":34}},"172":{"start":{"line":755,"column":12},"end":{"line":755,"column":63}},"173":{"start":{"line":756,"column":12},"end":{"line":760,"column":15}},"174":{"start":{"line":757,"column":16},"end":{"line":757,"column":40}},"175":{"start":{"line":758,"column":16},"end":{"line":758,"column":44}},"176":{"start":{"line":759,"column":16},"end":{"line":759,"column":44}},"177":{"start":{"line":761,"column":12},"end":{"line":761,"column":35}},"178":{"start":{"line":762,"column":12},"end":{"line":762,"column":39}},"179":{"start":{"line":763,"column":12},"end":{"line":763,"column":39}},"180":{"start":{"line":782,"column":12},"end":{"line":791,"column":77}},"181":{"start":{"line":793,"column":12},"end":{"line":793,"column":55}},"182":{"start":{"line":794,"column":12},"end":{"line":794,"column":33}},"183":{"start":{"line":795,"column":12},"end":{"line":795,"column":35}},"184":{"start":{"line":796,"column":12},"end":{"line":812,"column":13}},"185":{"start":{"line":797,"column":16},"end":{"line":805,"column":17}},"186":{"start":{"line":798,"column":20},"end":{"line":798,"column":51}},"187":{"start":{"line":799,"column":20},"end":{"line":801,"column":23}},"188":{"start":{"line":800,"column":24},"end":{"line":800,"column":77}},"189":{"start":{"line":802,"column":20},"end":{"line":802,"column":60}},"190":{"start":{"line":804,"column":20},"end":{"line":804,"column":61}},"191":{"start":{"line":807,"column":16},"end":{"line":811,"column":17}},"192":{"start":{"line":808,"column":20},"end":{"line":808,"column":61}},"193":{"start":{"line":810,"column":20},"end":{"line":810,"column":62}},"194":{"start":{"line":813,"column":12},"end":{"line":815,"column":13}},"195":{"start":{"line":814,"column":16},"end":{"line":814,"column":58}},"196":{"start":{"line":816,"column":12},"end":{"line":818,"column":13}},"197":{"start":{"line":817,"column":16},"end":{"line":817,"column":57}},"198":{"start":{"line":819,"column":12},"end":{"line":821,"column":13}},"199":{"start":{"line":820,"column":16},"end":{"line":820,"column":88}},"200":{"start":{"line":822,"column":12},"end":{"line":822,"column":31}},"201":{"start":{"line":823,"column":12},"end":{"line":823,"column":53}},"202":{"start":{"line":824,"column":12},"end":{"line":824,"column":65}},"203":{"start":{"line":826,"column":12},"end":{"line":826,"column":42}},"204":{"start":{"line":836,"column":12},"end":{"line":836,"column":39}},"205":{"start":{"line":837,"column":12},"end":{"line":837,"column":32}},"206":{"start":{"line":838,"column":12},"end":{"line":838,"column":37}},"207":{"start":{"line":848,"column":12},"end":{"line":848,"column":48}},"208":{"start":{"line":849,"column":12},"end":{"line":849,"column":51}},"209":{"start":{"line":861,"column":12},"end":{"line":863,"column":27}},"210":{"start":{"line":864,"column":12},"end":{"line":864,"column":34}},"211":{"start":{"line":865,"column":12},"end":{"line":872,"column":13}},"212":{"start":{"line":866,"column":16},"end":{"line":871,"column":19}},"213":{"start":{"line":867,"column":20},"end":{"line":867,"column":51}},"214":{"start":{"line":868,"column":20},"end":{"line":868,"column":62}},"215":{"start":{"line":869,"column":20},"end":{"line":869,"column":44}},"216":{"start":{"line":870,"column":20},"end":{"line":870,"column":31}},"217":{"start":{"line":881,"column":12},"end":{"line":881,"column":87}},"218":{"start":{"line":882,"column":12},"end":{"line":884,"column":13}},"219":{"start":{"line":883,"column":16},"end":{"line":883,"column":38}},"220":{"start":{"line":897,"column":12},"end":{"line":897,"column":36}},"221":{"start":{"line":898,"column":12},"end":{"line":902,"column":13}},"222":{"start":{"line":899,"column":16},"end":{"line":899,"column":38}},"223":{"start":{"line":901,"column":16},"end":{"line":901,"column":56}},"224":{"start":{"line":914,"column":12},"end":{"line":921,"column":54}},"225":{"start":{"line":923,"column":12},"end":{"line":926,"column":13}},"226":{"start":{"line":924,"column":16},"end":{"line":924,"column":36}},"227":{"start":{"line":925,"column":16},"end":{"line":925,"column":23}},"228":{"start":{"line":927,"column":12},"end":{"line":939,"column":13}},"229":{"start":{"line":928,"column":16},"end":{"line":937,"column":17}},"230":{"start":{"line":929,"column":20},"end":{"line":936,"column":21}},"231":{"start":{"line":930,"column":24},"end":{"line":932,"column":25}},"232":{"start":{"line":931,"column":28},"end":{"line":931,"column":51}},"233":{"start":{"line":933,"column":24},"end":{"line":933,"column":53}},"234":{"start":{"line":935,"column":24},"end":{"line":935,"column":53}},"235":{"start":{"line":938,"column":16},"end":{"line":938,"column":55}},"236":{"start":{"line":947,"column":12},"end":{"line":948,"column":34}},"237":{"start":{"line":949,"column":12},"end":{"line":949,"column":114}},"238":{"start":{"line":950,"column":12},"end":{"line":950,"column":93}},"239":{"start":{"line":960,"column":12},"end":{"line":963,"column":39}},"240":{"start":{"line":965,"column":12},"end":{"line":972,"column":13}},"241":{"start":{"line":967,"column":16},"end":{"line":967,"column":42}},"242":{"start":{"line":968,"column":16},"end":{"line":968,"column":39}},"243":{"start":{"line":969,"column":16},"end":{"line":969,"column":39}},"244":{"start":{"line":971,"column":16},"end":{"line":971,"column":36}},"245":{"start":{"line":974,"column":12},"end":{"line":974,"column":132}},"246":{"start":{"line":985,"column":12},"end":{"line":987,"column":42}},"247":{"start":{"line":988,"column":12},"end":{"line":988,"column":43}},"248":{"start":{"line":989,"column":12},"end":{"line":991,"column":15}},"249":{"start":{"line":990,"column":16},"end":{"line":990,"column":69}},"250":{"start":{"line":992,"column":12},"end":{"line":992,"column":84}},"251":{"start":{"line":993,"column":12},"end":{"line":993,"column":26}},"252":{"start":{"line":1002,"column":12},"end":{"line":1003,"column":36}},"253":{"start":{"line":1005,"column":12},"end":{"line":1005,"column":33}},"254":{"start":{"line":1006,"column":12},"end":{"line":1006,"column":24}},"255":{"start":{"line":1016,"column":12},"end":{"line":1016,"column":28}},"256":{"start":{"line":1017,"column":12},"end":{"line":1017,"column":41}},"257":{"start":{"line":1018,"column":12},"end":{"line":1018,"column":24}},"258":{"start":{"line":1028,"column":12},"end":{"line":1028,"column":44}},"259":{"start":{"line":1029,"column":12},"end":{"line":1029,"column":68}},"260":{"start":{"line":1039,"column":12},"end":{"line":1041,"column":58}},"261":{"start":{"line":1042,"column":12},"end":{"line":1044,"column":13}},"262":{"start":{"line":1043,"column":16},"end":{"line":1043,"column":28}},"263":{"start":{"line":1045,"column":12},"end":{"line":1045,"column":65}},"264":{"start":{"line":1055,"column":12},"end":{"line":1057,"column":58}},"265":{"start":{"line":1058,"column":12},"end":{"line":1060,"column":13}},"266":{"start":{"line":1059,"column":16},"end":{"line":1059,"column":28}},"267":{"start":{"line":1061,"column":12},"end":{"line":1061,"column":65}},"268":{"start":{"line":1069,"column":12},"end":{"line":1069,"column":49}},"269":{"start":{"line":1077,"column":12},"end":{"line":1077,"column":49}},"270":{"start":{"line":1085,"column":12},"end":{"line":1085,"column":59}},"271":{"start":{"line":1093,"column":12},"end":{"line":1093,"column":44}},"272":{"start":{"line":1101,"column":12},"end":{"line":1101,"column":45}},"273":{"start":{"line":1109,"column":12},"end":{"line":1109,"column":52}},"274":{"start":{"line":1122,"column":12},"end":{"line":1122,"column":36}},"275":{"start":{"line":1123,"column":12},"end":{"line":1127,"column":13}},"276":{"start":{"line":1124,"column":16},"end":{"line":1124,"column":52}},"277":{"start":{"line":1126,"column":16},"end":{"line":1126,"column":36}},"278":{"start":{"line":1242,"column":20},"end":{"line":1242,"column":38}},"279":{"start":{"line":1278,"column":20},"end":{"line":1278,"column":55}},"280":{"start":{"line":1292,"column":20},"end":{"line":1293,"column":44}},"281":{"start":{"line":1294,"column":20},"end":{"line":1297,"column":21}},"282":{"start":{"line":1295,"column":24},"end":{"line":1295,"column":35}},"283":{"start":{"line":1296,"column":24},"end":{"line":1296,"column":46}},"284":{"start":{"line":1298,"column":20},"end":{"line":1298,"column":35}},"285":{"start":{"line":1313,"column":0},"end":{"line":1313,"column":29}}},"branchMap":{"1":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":16},"end":{"line":207,"column":16}},{"start":{"line":207,"column":16},"end":{"line":207,"column":16}}]},"2":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":16},"end":{"line":211,"column":16}},{"start":{"line":211,"column":16},"end":{"line":211,"column":16}}]},"3":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":27},"end":{"line":215,"column":35}},{"start":{"line":215,"column":39},"end":{"line":215,"column":47}}]},"4":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":12},"end":{"line":242,"column":12}},{"start":{"line":242,"column":12},"end":{"line":242,"column":12}}]},"5":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":12},"end":{"line":265,"column":12}},{"start":{"line":265,"column":12},"end":{"line":265,"column":12}}]},"6":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":16},"end":{"line":265,"column":18}},{"start":{"line":265,"column":22},"end":{"line":265,"column":33}}]},"7":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":16},"end":{"line":268,"column":16}},{"start":{"line":268,"column":16},"end":{"line":268,"column":16}}]},"8":{"line":314,"type":"switch","locations":[{"start":{"line":316,"column":20},"end":{"line":317,"column":26}},{"start":{"line":319,"column":20},"end":{"line":322,"column":26}},{"start":{"line":324,"column":20},"end":{"line":324,"column":32}}]},"9":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":16},"end":{"line":327,"column":16}},{"start":{"line":327,"column":16},"end":{"line":327,"column":16}}]},"10":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":12},"end":{"line":346,"column":12}},{"start":{"line":346,"column":12},"end":{"line":346,"column":12}}]},"11":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":12},"end":{"line":360,"column":12}},{"start":{"line":360,"column":12},"end":{"line":360,"column":12}}]},"12":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":12},"end":{"line":363,"column":12}},{"start":{"line":363,"column":12},"end":{"line":363,"column":12}}]},"13":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":16},"end":{"line":364,"column":16}},{"start":{"line":364,"column":16},"end":{"line":364,"column":16}}]},"14":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":12},"end":{"line":370,"column":12}},{"start":{"line":370,"column":12},"end":{"line":370,"column":12}}]},"15":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":12},"end":{"line":391,"column":12}},{"start":{"line":391,"column":12},"end":{"line":391,"column":12}}]},"16":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":16},"end":{"line":393,"column":16}},{"start":{"line":393,"column":16},"end":{"line":393,"column":16}}]},"17":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":16},"end":{"line":396,"column":16}},{"start":{"line":396,"column":16},"end":{"line":396,"column":16}}]},"18":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":31},"end":{"line":403,"column":46}},{"start":{"line":403,"column":50},"end":{"line":403,"column":51}}]},"19":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":12},"end":{"line":419,"column":12}},{"start":{"line":419,"column":12},"end":{"line":419,"column":12}}]},"20":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":12},"end":{"line":425,"column":12}},{"start":{"line":425,"column":12},"end":{"line":425,"column":12}}]},"21":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":23},"end":{"line":440,"column":33}},{"start":{"line":440,"column":37},"end":{"line":440,"column":60}}]},"22":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":12},"end":{"line":441,"column":12}},{"start":{"line":441,"column":12},"end":{"line":441,"column":12}}]},"23":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":12},"end":{"line":444,"column":12}},{"start":{"line":444,"column":12},"end":{"line":444,"column":12}}]},"24":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":16},"end":{"line":446,"column":16}},{"start":{"line":446,"column":16},"end":{"line":446,"column":16}}]},"25":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":20},"end":{"line":480,"column":20}},{"start":{"line":480,"column":20},"end":{"line":480,"column":20}}]},"26":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":20},"end":{"line":484,"column":20}},{"start":{"line":484,"column":20},"end":{"line":484,"column":20}}]},"27":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":12},"end":{"line":490,"column":12}},{"start":{"line":490,"column":12},"end":{"line":490,"column":12}}]},"28":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":16},"end":{"line":493,"column":16}},{"start":{"line":493,"column":16},"end":{"line":493,"column":16}}]},"29":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":12},"end":{"line":508,"column":12}},{"start":{"line":508,"column":12},"end":{"line":508,"column":12}}]},"30":{"line":526,"type":"binary-expr","locations":[{"start":{"line":526,"column":20},"end":{"line":526,"column":25}},{"start":{"line":526,"column":29},"end":{"line":526,"column":33}}]},"31":{"line":528,"type":"binary-expr","locations":[{"start":{"line":528,"column":35},"end":{"line":528,"column":49}},{"start":{"line":528,"column":53},"end":{"line":528,"column":55}}]},"32":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":20},"end":{"line":529,"column":20}},{"start":{"line":529,"column":20},"end":{"line":529,"column":20}}]},"33":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":20},"end":{"line":549,"column":25}},{"start":{"line":549,"column":29},"end":{"line":549,"column":33}}]},"34":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":24},"end":{"line":554,"column":24}},{"start":{"line":554,"column":24},"end":{"line":554,"column":24}}]},"35":{"line":581,"type":"if","locations":[{"start":{"line":581,"column":12},"end":{"line":581,"column":12}},{"start":{"line":581,"column":12},"end":{"line":581,"column":12}}]},"36":{"line":581,"type":"binary-expr","locations":[{"start":{"line":581,"column":16},"end":{"line":581,"column":22}},{"start":{"line":581,"column":26},"end":{"line":581,"column":62}}]},"37":{"line":582,"type":"cond-expr","locations":[{"start":{"line":582,"column":38},"end":{"line":582,"column":50}},{"start":{"line":582,"column":51},"end":{"line":582,"column":73}}]},"38":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":20},"end":{"line":601,"column":20}},{"start":{"line":601,"column":20},"end":{"line":601,"column":20}}]},"39":{"line":601,"type":"binary-expr","locations":[{"start":{"line":601,"column":24},"end":{"line":601,"column":29}},{"start":{"line":601,"column":33},"end":{"line":601,"column":46}}]},"40":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":12},"end":{"line":607,"column":12}},{"start":{"line":607,"column":12},"end":{"line":607,"column":12}}]},"41":{"line":607,"type":"binary-expr","locations":[{"start":{"line":607,"column":16},"end":{"line":607,"column":21}},{"start":{"line":607,"column":25},"end":{"line":607,"column":44}}]},"42":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":12},"end":{"line":634,"column":12}},{"start":{"line":634,"column":12},"end":{"line":634,"column":12}}]},"43":{"line":634,"type":"binary-expr","locations":[{"start":{"line":634,"column":16},"end":{"line":634,"column":39}},{"start":{"line":634,"column":44},"end":{"line":634,"column":58}}]},"44":{"line":758,"type":"binary-expr","locations":[{"start":{"line":758,"column":21},"end":{"line":758,"column":23}},{"start":{"line":758,"column":27},"end":{"line":758,"column":43}}]},"45":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":21},"end":{"line":759,"column":23}},{"start":{"line":759,"column":27},"end":{"line":759,"column":43}}]},"46":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":29},"end":{"line":786,"column":43}},{"start":{"line":786,"column":47},"end":{"line":786,"column":68}}]},"47":{"line":790,"type":"binary-expr","locations":[{"start":{"line":790,"column":21},"end":{"line":790,"column":41}},{"start":{"line":790,"column":45},"end":{"line":790,"column":76}}]},"48":{"line":791,"type":"binary-expr","locations":[{"start":{"line":791,"column":21},"end":{"line":791,"column":41}},{"start":{"line":791,"column":45},"end":{"line":791,"column":76}}]},"49":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":12},"end":{"line":796,"column":12}},{"start":{"line":796,"column":12},"end":{"line":796,"column":12}}]},"50":{"line":797,"type":"if","locations":[{"start":{"line":797,"column":16},"end":{"line":797,"column":16}},{"start":{"line":797,"column":16},"end":{"line":797,"column":16}}]},"51":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":16},"end":{"line":807,"column":16}},{"start":{"line":807,"column":16},"end":{"line":807,"column":16}}]},"52":{"line":807,"type":"binary-expr","locations":[{"start":{"line":807,"column":20},"end":{"line":807,"column":50}},{"start":{"line":807,"column":54},"end":{"line":807,"column":67}}]},"53":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":12},"end":{"line":813,"column":12}},{"start":{"line":813,"column":12},"end":{"line":813,"column":12}}]},"54":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":12},"end":{"line":816,"column":12}},{"start":{"line":816,"column":12},"end":{"line":816,"column":12}}]},"55":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":12},"end":{"line":819,"column":12}},{"start":{"line":819,"column":12},"end":{"line":819,"column":12}}]},"56":{"line":824,"type":"cond-expr","locations":[{"start":{"line":824,"column":60},"end":{"line":824,"column":61}},{"start":{"line":824,"column":62},"end":{"line":824,"column":64}}]},"57":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":22},"end":{"line":849,"column":30}},{"start":{"line":849,"column":34},"end":{"line":849,"column":49}}]},"58":{"line":864,"type":"binary-expr","locations":[{"start":{"line":864,"column":20},"end":{"line":864,"column":25}},{"start":{"line":864,"column":29},"end":{"line":864,"column":33}}]},"59":{"line":865,"type":"if","locations":[{"start":{"line":865,"column":12},"end":{"line":865,"column":12}},{"start":{"line":865,"column":12},"end":{"line":865,"column":12}}]},"60":{"line":865,"type":"binary-expr","locations":[{"start":{"line":865,"column":16},"end":{"line":865,"column":24}},{"start":{"line":865,"column":28},"end":{"line":865,"column":43}}]},"61":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":12},"end":{"line":882,"column":12}},{"start":{"line":882,"column":12},"end":{"line":882,"column":12}}]},"62":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":12},"end":{"line":898,"column":12}},{"start":{"line":898,"column":12},"end":{"line":898,"column":12}}]},"63":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":16},"end":{"line":898,"column":48}},{"start":{"line":898,"column":52},"end":{"line":898,"column":67}}]},"64":{"line":901,"type":"binary-expr","locations":[{"start":{"line":901,"column":23},"end":{"line":901,"column":44}},{"start":{"line":901,"column":48},"end":{"line":901,"column":55}}]},"65":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":12},"end":{"line":923,"column":12}},{"start":{"line":923,"column":12},"end":{"line":923,"column":12}}]},"66":{"line":923,"type":"binary-expr","locations":[{"start":{"line":923,"column":16},"end":{"line":923,"column":25}},{"start":{"line":923,"column":29},"end":{"line":923,"column":42}},{"start":{"line":923,"column":47},"end":{"line":923,"column":62}},{"start":{"line":923,"column":67},"end":{"line":923,"column":89}}]},"67":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":12},"end":{"line":927,"column":12}},{"start":{"line":927,"column":12},"end":{"line":927,"column":12}}]},"68":{"line":928,"type":"if","locations":[{"start":{"line":928,"column":16},"end":{"line":928,"column":16}},{"start":{"line":928,"column":16},"end":{"line":928,"column":16}}]},"69":{"line":928,"type":"binary-expr","locations":[{"start":{"line":928,"column":20},"end":{"line":928,"column":34}},{"start":{"line":928,"column":38},"end":{"line":928,"column":59}}]},"70":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":20},"end":{"line":929,"column":20}},{"start":{"line":929,"column":20},"end":{"line":929,"column":20}}]},"71":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":24},"end":{"line":930,"column":24}},{"start":{"line":930,"column":24},"end":{"line":930,"column":24}}]},"72":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":12},"end":{"line":965,"column":12}},{"start":{"line":965,"column":12},"end":{"line":965,"column":12}}]},"73":{"line":974,"type":"cond-expr","locations":[{"start":{"line":974,"column":84},"end":{"line":974,"column":107}},{"start":{"line":974,"column":108},"end":{"line":974,"column":129}}]},"74":{"line":992,"type":"binary-expr","locations":[{"start":{"line":992,"column":17},"end":{"line":992,"column":19}},{"start":{"line":992,"column":23},"end":{"line":992,"column":83}}]},"75":{"line":1029,"type":"cond-expr","locations":[{"start":{"line":1029,"column":26},"end":{"line":1029,"column":61}},{"start":{"line":1029,"column":62},"end":{"line":1029,"column":66}}]},"76":{"line":1040,"type":"binary-expr","locations":[{"start":{"line":1040,"column":28},"end":{"line":1040,"column":34}},{"start":{"line":1040,"column":38},"end":{"line":1040,"column":53}}]},"77":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":12},"end":{"line":1042,"column":12}},{"start":{"line":1042,"column":12},"end":{"line":1042,"column":12}}]},"78":{"line":1042,"type":"binary-expr","locations":[{"start":{"line":1042,"column":16},"end":{"line":1042,"column":27}},{"start":{"line":1042,"column":31},"end":{"line":1042,"column":55}}]},"79":{"line":1056,"type":"binary-expr","locations":[{"start":{"line":1056,"column":28},"end":{"line":1056,"column":34}},{"start":{"line":1056,"column":38},"end":{"line":1056,"column":53}}]},"80":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":12},"end":{"line":1058,"column":12}},{"start":{"line":1058,"column":12},"end":{"line":1058,"column":12}}]},"81":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":12},"end":{"line":1123,"column":12}},{"start":{"line":1123,"column":12},"end":{"line":1123,"column":12}}]},"82":{"line":1123,"type":"binary-expr","locations":[{"start":{"line":1123,"column":16},"end":{"line":1123,"column":51}},{"start":{"line":1123,"column":55},"end":{"line":1123,"column":92}},{"start":{"line":1123,"column":96},"end":{"line":1123,"column":102}}]}},"code":["(function () { YUI.add('gallery-flyweight-tree', function (Y, NAME) {","","/**","* An implementation of the flyweight pattern for rendering tree-structured data.","*","* This module is made of two components, the manager and the nodes.","* The manager, FlyweightTreeManager, holds a definition of the tree in an internal, private object","* which is completely passive, with no methods, events or attributes.","* This is the internal tree configuration and the nodes of that tree are called iNodes","* for 'internal nodes'.","*","* When any action needs to be taken on any node, the manager takes a node instance","* (an instance of FlyweightTreeNode or, more often, a subclass of it)","* from the pool of instances, or creates one if none is available and slides it","* on top of the iNode holding its state and then performs the action as if","* the node instance had always been there.","*","* The manager is a subclass of Widget and contains the overall container for the tree.","* Nodes are a subclass of Base and they are rendered from markup resulting of","* processing its template with its attributes and several pre-defined placeholders.","*","* Nodes should not be instantiated directly but requested from the manager.","* Nodes are automatically generated by the manager in response to events.","* They are returned to the pool of nodes once the event listener return.","* The user should not hold references to nodes provided to event listeners","* or the callback of the tree traversal methods, since the manager will return","* them to the pool.  If the user needs to keep a reference, the `hold` method","* can be used to preserve it.","* On the other hand, for methods that do return a permanent reference or","* references marked as held, the user is responsible for calling `release`","* when no longer required so that the manager can return them to the pool.","*","* @module gallery-flyweight-tree","*/","'use strict';","/*jslint white: true */","var Lang = Y.Lang,","    YArray = Y.Array,","","    DOT = '.',","    HASH = '#',","    BYPASS_PROXY = \"_bypassProxy\",","    CBX = 'contentBox',","    VALUE = 'value',","    EXPANDED = 'expanded',","    DYNAMIC_LOADER = 'dynamicLoader',","    TABINDEX = 'tabIndex',","    FOCUSED = 'focusedNode',","","    DEFAULT_POOL = '_default',","","    getCName = Y.ClassNameManager.getClassName,","    FWNODE_NAME = 'flyweight-tree-node',","    cName = function (name) {","        return getCName(FWNODE_NAME, name);","    },","","    FWMgr,","    FWNode;","","/**"," * Widget to handle its child nodes by using the flyweight pattern."," *"," * The information for the tree is stored internally in a plain object without methods,"," * events or attributes."," * This manager will position FlyweightTreeNode instances (or subclasses of it)"," * over these iNodes from a small pool of them, in order to save memory."," *"," * The nodes on this configuration tree are referred to in this documentation as `iNodes`"," * for 'internal nodes', to tell them apart from the pooled FlyweightTreeNode instances"," * that will be used to manipulate them.  The FlyweightTreeNode instances will usually"," * be declared as `fwNodes` when confusion might arise."," * If a variable or argument is not explicitly named `iNode` or a related name it is"," * FlyweightTreeNode instance."," *"," * The developer should not be concerned about the iNodes,"," * except in the initial configuration tree."," * If the developer finds anything that needs to be done through iNodes,"," * it is a bug and should be reported (thanks)."," * iNodes should be private."," *"," * @class FlyweightTreeManager"," * @extends Widget"," * @constructor"," */","","FWMgr = Y.Base.create(","    NAME,","    Y.Widget,","    [],","    {","        /**","         * Clone of the configuration tree.","         * The FlyweightTreeNode instances will use the iNodes (internal nodes) in this tree as the storage for their state.","         * @property _tree","         * @type Object","         * @private","         */","        _tree: null,","        /**","         * Pool of FlyweightTreeNode instances to use and reuse by the manager.","         * It contains a hash of arrays indexed by the iNode (internal node) type.","         * Each array contains a series of FlyweightTreeNode subclasses of the corresponding type.","         * @property _pool","         * @type {Object}","         * @private","         */","        _pool: null,","        /**","         * List of dom events to be listened for at the outer container and fired again","         * at the FlyweightTreeNode level once positioned over the source iNode.","         *","         * Since the node instances are not actually there, they can't listen to the events themselves","         * so the events listed here will serve to wake up those instances and get the event","         * as if they had been there all along.","         * @property _domEvents","         * @type Array of strings","         * @protected","         * @default null","         */","        _domEvents: null,","        /**","         * Reference to the element that has the focus or should have the focus","         * when this widget is active (ie, tabbed into).","         * Mostly used for WAI-ARIA support.","         * @property _focusedINode","         * @type FlyweightTreeNode","         * @private","         * @default null","         */","        _focusedINode: null,","","        /**","         * Event handles of events subscribed to, to detach them on destroy","         * @property _eventHandles","         * @type Array of EventHandles","         * @private","         */","        _eventHandles: null,","","        /**","         * Part of the Widget lifecycle.","         * @method initializer","         * @protected","         */","        initializer:function () {","            this._pool = {};","            this._eventHandles = [];","        },","        /**","         * Part of the lifecycle.  Destroys the pools.","         * @method destructor","         * @protected","         */","        destructor: function () {","            var pool = this._pool;","            Y.Object.each(pool, function (value, key) {","                YArray.each(value, function (fwNode) {","                    fwNode.destroy();","                });","                delete pool[key];","            });","            this._pool = null;","            YArray.each(this._eventHandles, function (evHandle) {","                evHandle.detach();","            });","            this._eventHandles = null;","","        },","        /**","         * Method to load the configuration tree.","         * The nodes in this tree are copied into iNodes (internal nodes) for internal use.","         *","         * The initializer does not load the tree automatically so as to allow the subclass","         * of this manager","         * to process the tree definition anyway it wants, adding defaults and such","         * and to name the tree whatever is suitable.","         * For TreeView, the configuration property is named `tree`, for a form, it is named `form`.","         * It also sets initial values for some default properties such as `parent` references and `id` for all iNodes.","         * @method _loadConfig","         * @param tree {Array} Configuration for the first level of nodes.","         * Contains objects with the following attributes:","         * @param tree.label {String} Text or HTML markup to be shown in the node","         * @param [tree.expanded=true] {Boolean} Whether the children of this node should be visible.","         * @param [tree.children] {Array} Further definitions for the children of this node","         * @param [tree.type=FWTreeNode] {FWTreeNode | String} Class used to create instances for this iNode.","         * It can be a reference to an object or a name that can be resolved as `Y[name]`.","         * @param [tree.id=Y.guid()] {String} Identifier to assign to the DOM element containing the UI for this node.","         * @param [tree.template] {String} Template for this particular node.","         * @protected","         */","        _loadConfig: function (tree) {","            this._tree = {","                children: Y.clone(tree)","            };","            this._initNodes(this._tree);","","        },","        /** Initializes the iNodes configuration with default values and management info.","         * @method _initNodes","         * @param parentINode {Object} Parent of the iNodes to be set","         * @protected","         */","        _initNodes: function (parentINode) {","            var self = this;","            YArray.each(parentINode.children, function (iNode, i) {","                if (Lang.isString(iNode)) {","                    iNode = {label: iNode};","                    parentINode.children[i] = iNode;","                }","                if (!self._focusedINode) {","                    self._focusedINode = iNode;","                }","                iNode._parent = parentINode;","                iNode.id = iNode.id || Y.guid();","","                self._initNodes(iNode);","            });","        },","        /**","         * Widget lifecyle method.","         *","         * Gets the HTML markup for the visible nodes and inserts it into the contentbox.","         * @method renderUI","         * @protected","         */","        renderUI: function () {","            var root = this.getRoot();","            root._renderChildren(this.get(CBX));","            root.release();","        },","        /**","         * Initializes the events for its internal use and those requested in","         * the {{#crossLink \"_domEvents\"}}{{/crossLink}} array.","         * @method bindUI","         * @protected","         */","        bindUI: function() {","            var self = this;","","            self._eventHandles.push(self.after('focus', self._afterFocus));","            if (self._domEvents) {","                YArray.each(self._domEvents, function (event) {","                    self._eventHandles.push(self.after(event, self._afterDomEvent, self));","                });","            }","        },","        /**","         * Overrides the native `fire` method so that for DOM events,","         * it will fetch from the pool the fwNode that should have received","         * the event and add it to the event facade as property `node`.","         *","         * @method fire","         * @param type {String|Object} The type of the event, or an object that contains","         * a 'type' property.","         * @param arguments {Object*} an arbitrary set of parameters to pass to","         * the handler. If the first of these is an object literal and the event is","         * configured to emit an event facade, the event facade will replace that","         * parameter after the properties the object literal contains are copied to","         * the event facade.","         * @return {Boolean} false if the event was halted.","         */","        fire: function (type, ev) {","            var ret, self = this;","            if (ev && ev.domEvent) {","                ev.node = self._poolFetchFromEvent(ev);","                ret = FWMgr.superclass.fire.call(self, type, ev);","                if (ev.node) {","                    self._poolReturn(ev.node);","                }","                return ret;","            }","            return FWMgr.superclass.fire.apply(self, arguments);","        },","        /**","         * Expands all the nodes of the tree.","         *","         * It will only expand existing nodes.  If there is a {{#crossLink \"dynamicLoader:attribute\"}}{{/crossLink}} configured","         * it will not expand those since that might lead to extreme situations.","         * @method expandAll","         * @chainable","         */","        expandAll: function () {","            this.forSomeNodes(function(node) {","                node.set(EXPANDED, true);","            });","        },","        /**","         * Collapses all the nodes of the tree.","         *","         * @method collapseAll","         * @chainable","         */","        collapseAll: function () {","            this.forSomeNodes(function(node) {","                node.set(EXPANDED, false);","            });","        },","        /**","         * Finds a node by attribute value or by condition.","         * If the first argument is a string, it must be the name of an attribute","         * and the second argument the value sought.","         * If the first argument is a function, it should return true on finding","         * the node sought. The function will receive a node reference.","         * It returns the node sought or null.","         * The node is on hold and it must be released once used.","         * @method getNodeBy","         * @param attr {String or Function} Either an attribute name or a matching function","         * @param value {Any} if the first argument is a string, the second is the value to match","         * @return {FWNode or null} The node found or null","         */","        getNodeBy: function (attr, value) {","            var fn, found = null;","            switch (Lang.type(attr)) {","                case 'function':","                    fn = attr;","                    break;","                case 'string':","                    fn = function (node) {","                        return node.get(attr) === value;","                    };","                    break;","                default:","                    return null;","            }","            this.forSomeNodes(function (node) {","                if (fn(node)) {","                    found = node;","                    found.hold();","                    return true;","                }","                return false;","            });","            return found;","        },","","        /** Generic event listener for DOM events listed in the {{#crossLink \"_domEvents\"}}{{/crossLink}} array.","         *  It will locate the iNode represented by the UI elements that received the event,","         *  slide a suitable instance on it and fire the same event on that node.","         *  @method _afterEvent","         *  @param ev {EventFacade} Event facade as produced by the event","         *  @private","         */","        _afterDomEvent: function(ev) {","            var fwNode =  ev.node;","            if (fwNode) {","                fwNode.fire(ev.type.split(':')[1], {domEvent:ev.domEvent});","            }","        },","        /**","         * Returns a string identifying the type of the object to handle the iNode","         * or null if type was not a FlyweightNode instance.","         * @method _getTypeString","         * @param iNode {Object} Internal node in the tree configuration","         * @return {String} type of iNode.","         * @private","         */","        _getTypeString: function (iNode) {","            var type = iNode.type;","            if (!type) {","                return DEFAULT_POOL;","            }","            if (typeof type === 'string') {","                if (!Y[type]) {","                    throw new TypeError('Missing node class: Y.' + type );","                }","                type = Y[type];","            }","            type = type.NAME;","            if (!type) {","                throw new TypeError(\"Node contains unknown type\");","            }","            return type;","        },","        /**","         * Pulls from the pool an instance of the type declared in the given iNode","         * and slides it over that iNode.","         * If there are no instances of the given type in the pool, a new one will be created via {{#crossLink \"_createNode\"}}{{/crossLink}}","         * If an instance is held (see: {{#crossLink \"FlyweightTreeNode/hold\"}}{{/crossLink}}), it will be returned instead.","         * @method _poolFetch","         * @param iNode {Object} reference to a iNode within the configuration tree","         * @return {FlyweightTreeNode} Usually a subclass of FlyweightTreeNode positioned over the given iNode","         * @protected","         */","        _poolFetch: function(iNode) {","","            var pool,","                fwNode = iNode._nodeInstance,","                type = this._getTypeString(iNode);","","            if (!fwNode) {","                pool = this._pool[type];","                if (pool === undefined) {","                    pool = this._pool[type] = [];","                }","                if (pool.length) {","                    fwNode = pool.pop();","                    fwNode._slideTo(iNode);","                } else {","                    fwNode = this._createNode(iNode);","                }","            }","            iNode._refCount = (iNode._refCount || 0) + 1;","            return fwNode;","        },","        /**","         * Returns the FlyweightTreeNode instance to the pool.","         * Instances held (see: {{#crossLink \"FlyweightTreeNode/hold\"}}{{/crossLink}}) are never returned.","         * @method _poolReturn","         * @param fwNode {FlyweightTreeNode} Instance to return.","         * @protected","         */","        _poolReturn: function (fwNode) {","            var pool,","                iNode = fwNode._iNode,","                type = this._getTypeString(iNode);","","            iNode._refCount -= 1 ;","            if (iNode._refCount) {","                return;","            }","            fwNode._iNode = null;","            iNode._nodeInstance = null;","            pool = this._pool[type];","            if (pool) {","                pool.push(fwNode);","            }","        },","        /**","         * Returns a new instance of the type given in iNode or the","         * {{#crossLink \"defaultType\"}}{{/crossLink}} if none specified","         * and slides it on top of the iNode provided.","         * @method _createNode","         * @param iNode {Object} reference to a iNode within the configuration tree","         * @return {FlyweightTreeNode} Instance of the corresponding subclass of FlyweightTreeNode","         * @protected","         */","        _createNode: function (iNode) {","            var newNode,","                Type = iNode.type || this.get('defaultType');","            if (Lang.isString(Type)) {","                Type = Y[Type];","            }","            if (Type) {","                newNode = new Type({root:this});","                if (newNode instanceof Y.FlyweightTreeNode) {","                    // I need to do this otherwise Attribute will initialize","                    // the real iNode with default values when activating a lazyAdd attribute.","                    newNode._slideTo({});","                    YArray.each(Y.Object.keys(newNode._state.data), newNode._addLazyAttr, newNode);","                    // newNode.getAttrs();","                    // That's it (see above)","                    newNode._root =  this;","                    newNode._slideTo(iNode);","                    return newNode;","                }","            }","            return null;","        },","        /**","         * Returns an instance of Flyweight node positioned over the root.","         * The reference is placed on hold and should be released once used.","         * @method getRoot","         * @return {FlyweightTreeNode}","         */","        getRoot: function () {","            return this._poolFetch(this._tree).hold();","        },","        /**","         * Locates a iNode in the tree by the element that represents it.","         * @method _findINodeByElement","         * @param el {Node} Any element belonging to the tree","         * @return {Object} iNode that produced the markup for that element or null if not found","         * @protected","         */","        _findINodeByElement: function(el) {","            var id,","                found = null,","                scan = function (iNode) {","                    if (iNode.id === id) {","                        found = iNode;","                        return true;","                    }","                    if (iNode.children) {","                        return YArray.some(iNode.children, scan);","                    }","                    return false;","                };","            el = el.ancestor(DOT + FWNode.CNAMES.CNAME_NODE, true);","            if (el) {","                id = el.get('id');","","                if (scan(this._tree)) {","                    return found;","                }","            }","            return null;","        },","        /**","         * Returns a FlyweightTreeNode instance from the pool, positioned over the iNode whose markup generated some event.","         * @method _poolFetchFromEvent","         * @param ev {EventFacade}","         * @return {FlyweightTreeNode} The FlyweightTreeNode instance or null if not found.","         * @private","         */","        _poolFetchFromEvent: function (ev) {","            var found = this._findINodeByElement(ev.domEvent.target);","            if (found) {","                return this._poolFetch(found);","            }","            return null;","        },","        /**","         * Traverses the whole configuration tree, calling a given function for each iNode.","         * If the function returns true, the traversing will terminate.","         * @method _forSomeINode","         * @param fn {Function} Function to call on each configuration iNode","         *        @param fn.iNode {Object} iNode in the configuration tree","         *        @param fn.depth {Integer} depth of this iNode within the tree","         *        @param fn.index {Integer} index of this iNode within the array of its siblings","         * @param scope {Object} scope to run the function in, defaults to `this`.","         * @return true if any of the function calls returned true (the traversal was terminated earlier)","         * @protected","         */","        _forSomeINode: function(fn, scope) {","            scope = scope || this;","            var loop = function(iNode, depth) {","                return YArray.some(iNode.children || [], function(childINode, index) {","                    if (fn.call(scope, childINode,depth, index)) {","                        return true;","                    }","                    return loop(childINode,depth + 1);","                });","            };","            return loop(this._tree, 0);","        },","        /**","         * Executes the given function over all the nodes in the tree or until the function returns true.","         * If dynamic loading is enabled, it will not run over nodes not yet loaded.","         * @method forSomeNodes","         * @param fn {function} function to execute on each node.  It will receive:","         *    @param fn.node {FlyweightTreeNode} node being visited.","         *    @param fn.depth {Integer} depth from the root. The root node is level zero and it is not traversed.","         *    @param fn.index {Integer} position of this node within its branch","         * @param scope {Object} Scope to run the function in.  Defaults to the FlyweightTreeManager instance.","         * @return {Boolean} true if any function calls returned true (the traversal was interrupted)","         */","        forSomeNodes: function (fn, scope) {","            scope = scope || this;","","            var root = this.getRoot(),","                forOneLevel = function (fwNode, depth) {","                    fwNode.forSomeChildren(function (fwNode, index, array) {","                        if (fn.call(scope, fwNode, depth, index, array) === true) {","                            return true;","                        }","                        return forOneLevel(fwNode, depth + 1);","                    });","                },","                ret = forOneLevel(root, 0);","            root.release();","            return ret;","        },","        /**","         * Getter for the {{#crossLink \"focusedNode:attribute\"}}{{/crossLink}} attribute","         * @method _focusedNodeGetter","         * @return {FlyweightNode} Node that would have the focus if the widget is focused","         * @private","         */","        _focusedNodeGetter: function () {","            return this._poolFetch(this._focusedINode).hold();","        },","        /**","         * Setter for the {{#crossLink \"focusedNode:attribute\"}}{{/crossLink}} attribute","         * @method _focusedNodeSetter","         * @param value {FlyweightNode} Node to receive the focus.","         * @return {Object} iNode matching the focused node.","         * @private","         */","        _focusedNodeSetter: function (value) {","            if (!value || value instanceof Y.FlyweightTreeNode) {","                var newINode = (value?value._iNode:this._tree.children[0]);","                this._focusOnINode(newINode);","                return newINode;","            } else {","                return Y.Attribute.INVALID_VALUE;","            }","        },","        /**","         * Sets the focus on the given iNode","         * @method _focusOnINode","         * @param iNode {Object} iNode to receive the focus","         * @private","         */","        _focusOnINode: function (iNode) {","            var prevINode = this._focusedINode,","                el,","                self = this,","                expand = function (iNode) {","                    iNode = iNode._parent;","                    if (iNode && iNode._parent) {","                        expand(iNode);","                        self._poolReturn(self._poolFetch(iNode).set(EXPANDED, true));","                    }","                };","","            if (iNode && iNode !== prevINode) {","","                el = Y.one(HASH + prevINode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);","                el.blur();","                el.set(TABINDEX, -1);","","                expand(iNode);","","                el = Y.one(HASH + iNode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);","                el.focus();","                el.set(TABINDEX,0);","","                self._focusedINode = iNode;","","            }","","        },","        /**","         * Setter for the {{#crossLink \"dynamicLoader:attribute\"}}{{/crossLink}} attribute.","         * It changes the expanded attribute to false on childless iNodes not marked with `isLeaf","         * since they can now be expanded.","         * @method","         * @param value {Function | null } Function to handle the loading of nodes on demand","         * @return {Function | null | INVALID_VALUE} function set or rejection","         * @private","         */","        _dynamicLoaderSetter: function (value) {","            if (!Lang.isFunction(value) &&  value !== null) {","                return Y.Attribute.INVALID_VALUE;","            }","            return value;","        }","    },","    {","        ATTRS: {","            /**","             * Default object type of the nodes if no explicit type is given in the configuration tree.","             * It can be specified as an object reference, these two are equivalent: `Y.FWTreeNode` or  `'FWTreeNode'`.","             *","             * @attribute defaultType","             * @type {String | Object}","             * @default 'FlyweightTreeNode'","             */","            defaultType: {","                value: 'FlyweightTreeNode'","            },","            /**","             * Function used to load the nodes dynamically.","             * Function will run in the scope of the FlyweightTreeManager instance and will","             * receive:","             *","             * * node {FlyweightTreeNode} reference to the parent of the children to be loaded.","             * * callback {Function} function to call with the configuration info for the children.","             *","             * The function shall fetch the nodes and create a configuration object","             * much like the one a whole tree might receive.","             * It is not limited to just one level of nodes, it might contain children elements as well.","             * When the data is processed, it should call the callback with the configuration object.","             * The function is responsible of handling any errors.","             * If the the callback is called with no arguments, the parent node will be marked as having no children.","             *","             * This attribute should be set before the tree is rendered as childless nodes","             * render differently when there is a dynamic loader than when there isn't.","             * (childless nodes can be expanded when a dynamic loader is present and the UI should reflect that).","             * @attribute dynamicLoader","             * @type {Function or null}","             * @default null","             */","            dynamicLoader: {","                value: null,","                setter: '_dynamicLoaderSetter'","            },","            /**","             * Points to the node that currently has the focus.","             * If read, the node returned is placed on hold.","             * Please make sure to release the node instance to the pool when done.","             * @attribute focusedNode","             * @type FlyweightTreeNode","             * @default First node in the tree","             */","            focusedNode: {","                getter: '_focusedNodeGetter',","                setter: '_focusedNodeSetter'","                // There is no need for validator since the setter already takes care of validation.","            }","","        }","    });","","","Y.FlyweightTreeManager = FWMgr;","","","/**","* An implementation of the flyweight pattern.  This class should not be instantiated directly.","* Instances of this class can be requested from the flyweight manager class","*","* The FlyweightTreeManager will create instances of this class as required and","* pool them when not in use.","* The instances can be slid on top of the nodes (iNodes, for internal nodes)","* in literal object containing the definition","* of a tree and will take its state from the `iNode` it is slid upon.","* It relies for most of its functionality on the flyweight manager object,","* which contains most of the code.","* @class FlyweightTreeNode","* @extends Base","* @constructor  Do not instantiate directly.","*/","FWNode = Y.Base.create(","    FWNODE_NAME,","    Y.Base,","    [],","    {","        /**","         * Reference to the iNode in the configuration tree it has been slid over.","         * @property _iNode","         * @type {Object}","         * @private","         **/","        _iNode:null,","        /**","         * Reference to the FlyweightTreeManager instance this node belongs to.","         * It is set by the root and should be considered read-only.","         * @property _root","         * @type FlyweightTreeManager","         * @private","         */","        _root: null,","        /**","         * Standard lifecycle method, reads the root node from the config","         * @method initializer","         * @param cfg {object} configuration data","         * @protected","         */","        initializer: function (cfg) {","            this._root = cfg.root;","            this.after('expandedChange', this._afterExpandedChange);","            this.after('labelChange', this._afterLabelChange);","            // This is a patch because the _buildCfg does not work","            this._buildCfgPatch();","        },","        /**","         * Patch to work around the issue with the static _buildCfg property of Base","         * that doesn't quite work.","         * @method _buildCfgPatch","         * @private","         */","        _buildCfgPatch: function () {","            var cnames = {}, it, ot, constr = this.constructor;","            YArray.each(this._classes, function (c) {","                Y.mix(cnames, c.CNAMES);","                it = it || c.INNER_TEMPLATE;","                ot = ot || c.OUTER_TEMPLATE;","            });","            constr.CNAMES = cnames;","            constr.INNER_TEMPLATE = it;","            constr.OUTER_TEMPLATE = ot;","        },","        /**","         * Returns a string with the markup for this node along that of its children","         * produced from its attributes rendered","         * via the first template string it finds in these locations:","         *","         * * It's own {{#crossLink \"template\"}}{{/crossLink}} configuration attribute","         * * The static {{#crossLink \"FlyweightTreeNode/TEMPLATE\"}}{{/crossLink}} class property","         *","         * @method _getHTML","         * @param index {Integer} index of this node within the array of siblings","         * @param nSiblings {Integer} number of siblings including this node","         * @param depth {Integer} number of levels to the root","         * @return {String} markup generated by this node","         * @protected","         */","        _getHTML: function(index, nSiblings, depth) {","            // assumes that if you asked for the HTML it is because you are rendering it","            var root = this._root,","                iNode = this._iNode,","                attrs = this.getAttrs(),","                s = '',","                childCount = iNode.children && iNode.children.length,","                CNAMES = this.constructor.CNAMES,","                nodeClasses = [CNAMES.CNAME_NODE],","                templ,","                it = iNode.inner_template || this.constructor.INNER_TEMPLATE,","                ot = iNode.outer_template || this.constructor.OUTER_TEMPLATE;","","            templ = ot.replace('{INNER_TEMPLATE}', it);","            Y.mix(attrs, CNAMES);","            iNode._rendered = true;","            if (childCount) {","                if (attrs[EXPANDED]) {","                    iNode._childrenRendered = true;","                    this.forSomeChildren( function (fwNode, index, array) {","                        s += fwNode._getHTML(index, array.length, depth + 1);","                    });","                    nodeClasses.push(CNAMES.CNAME_EXPANDED);","                } else {","                    nodeClasses.push(CNAMES.CNAME_COLLAPSED);","                }","            } else {","                if (this._root.get(DYNAMIC_LOADER) && !iNode.isLeaf) {","                    nodeClasses.push(CNAMES.CNAME_COLLAPSED);","                } else {","                    nodeClasses.push(CNAMES.CNAME_NOCHILDREN);","                }","            }","            if (index === 0) {","                nodeClasses.push(CNAMES.CNAME_FIRSTCHILD);","            }","            if (index === nSiblings - 1) {","                nodeClasses.push(CNAMES.CNAME_LASTCHILD);","            }","            if (iNode.type) {","                nodeClasses.push(CNAMES.CNAME_TYPE_PREFIX + root._getTypeString(iNode));","            }","            attrs.children = s;","            attrs.CNAME_NODE = nodeClasses.join(' ');","            attrs.tabIndex = (iNode === root._focusedINode)?0:-1;","","            return Lang.sub(templ, attrs);","","        },","        /**","         * Method to slide this instance on top of another iNode in the configuration object","         * @method _slideTo","         * @param iNode {Object} iNode in the underlying configuration tree to slide this object on top of.","         * @private","         */","        _slideTo: function (iNode) {","            iNode._nodeInstance = this;","            this._iNode = iNode;","            this._stateProxy = iNode;","        },","        /**","         * Whether this node has children.","         * If there are children, it actually returns the number of children,","         * otherwise it might return 0 or undefined.","         * @method hasChildren","         * @return {Boolean} true if the node has children","         */","        hasChildren: function () {","            var children = this._iNode.children;","            return !!(children && children.length);","        },","        /**","         * Executes the given function on each of the child nodes of this node.","         * @method forSomeChildren","         * @param fn {Function} Function to be executed on each node","         *        @param fn.child {FlyweightTreeNode} Instance of a suitable subclass of FlyweightTreeNode,","         *        positioned on top of the child node","         *        @param fn.index {Integer} Index of this child within the array of children","         * @param scope {object} The falue of this for the function.  Defaults to the parent.","        **/","        forSomeChildren: function(fn, scope) {","            var root = this._root,","                children = this._iNode.children,","                child, ret;","            scope = scope || this;","            if (children && children.length) {","                YArray.some(children, function (iNode, index, array) {","                    child = root._poolFetch(iNode);","                    ret = fn.call(scope, child, index, array);","                    root._poolReturn(child);","                    return ret;","                });","            }","        },","        /**","         * Responds to the change in the {{#crossLink \"label:attribute\"}}{{/crossLink}} attribute.","         * @method _afterLabelChange","         * @param ev {EventFacade} standard attribute change event facade","         * @private","         */","        _afterLabelChange: function (ev) {","            var el = Y.one(HASH + this._iNode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);","            if (el) {","                el.setHTML(ev.newVal);","            }","        },","        /**","         * Getter for the expanded configuration attribute.","         * It is meant to be overriden by the developer.","         * The supplied version defaults to true if the expanded property","         * is not set in the underlying configuration tree.","         * It can be overriden to default to false.","         * @method _expandedGetter","         * @return {Boolean} The expanded state of the node.","         * @protected","         */","        _expandedGetter: function (value) {","            var iNode = this._iNode;","            if (!!this._root.get(DYNAMIC_LOADER) && !iNode.children) {","                return !!iNode.isLeaf;","            } else {","                return (value === undefined) || !!value;","            }","        },","        /**","         * Responds to the change in the {{#crossLink \"expanded:attribute\"}}{{/crossLink}} attribute.","         * It renders the child nodes if this branch has never been expanded.","         * Then sets the className on the node to the static constants","         * CNAME\\_COLLAPSED or CNAME\\_EXPANDED from Y.FlyweightTreeManager","         * @method _afterExpandedChange","         * @param ev {EventFacade} standard attribute change event facade","         * @private","         */","        _afterExpandedChange: function (ev) {","            var value = !!ev.newVal,","                self = this,","                iNode = self._iNode,","                root = self._root,","                el = Y.one(HASH + iNode.id),","                dynLoader = root.get(DYNAMIC_LOADER),","                CEXP = FWNode.CNAMES.CNAME_EXPANDED,","                CCOLL = FWNode.CNAMES.CNAME_COLLAPSED;","","            if (dynLoader && !iNode.isLeaf && (!iNode.children  || !iNode.children.length)) {","                this._loadDynamic();","                return;","            }","            if (el) {","                if (iNode.children && iNode.children.length) {","                    if (value) {","                        if (!iNode._childrenRendered) {","                            self._renderChildren();","                        }","                        el.replaceClass(CCOLL, CEXP);","                    } else {","                        el.replaceClass(CEXP, CCOLL);","                    }","                }","                el.set('aria-expanded', String(value));","            }","        },","        /**","         * Triggers the dynamic loading of children for this node.","         * @method _loadDynamic","         * @private","         */","        _loadDynamic: function () {","            var self = this,","                root = self._root;","            Y.one(HASH + this.get('id')).replaceClass(FWNode.CNAMES.CNAME_COLLAPSED, FWNode.CNAMES.CNAME_LOADING);","            root.get(DYNAMIC_LOADER).call(root, self, Y.bind(self._dynamicLoadReturn, self));","","        },","        /**","         * Callback for the dynamicLoader method.","         * @method _dynamicLoadReturn","         * @param response {Array} array of child iNodes","         * @private","         */","        _dynamicLoadReturn: function (response) {","            var self = this,","                iNode = self._iNode,","                root = self._root,","                CNAMES = FWNode.CNAMES;","","            if (response) {","","                iNode.children = response;","                root._initNodes(iNode);","                self._renderChildren();","            } else {","                iNode.isLeaf = true;","            }","            // isLeaf might have been set in the response, not just in the line above.","            Y.one(HASH + iNode.id).replaceClass(CNAMES.CNAME_LOADING, (iNode.isLeaf?CNAMES.CNAME_NOCHILDREN:CNAMES.CNAME_EXPANDED));","        },","        /**","         * Renders the children of this node.","         * It the children had been rendered, they will be replaced.","         * @method _renderChildren","         * @param el {Node} Container to render the children into.","         * Used only for rendering of the root when it will be the contentBox.","         * @private","         */","        _renderChildren: function (el) {","            var s = '',","                iNode = this._iNode,","                depth = this.get('depth');","            iNode._childrenRendered = true;","            this.forSomeChildren(function (fwNode, index, array) {","                s += fwNode._getHTML(index, array.length, depth + 1);","            });","            el = el || Y.one(HASH + iNode.id + ' .' + FWNode.CNAMES.CNAME_CHILDREN);","            el.setHTML(s);","        },","        /**","         * Prevents this instance from being returned to the pool and reused.","         * Remember to {{#crossLink \"release\"}}{{/crossLink}} this instance when no longer needed.","         * @method hold","         * @chainable","         */","        hold: function () {","            var self = this,","                iNode = self._iNode;","","            iNode._refCount += 1;","            return self;","        },","        /**","         * Allows this instance to be returned to the pool and reused.","         *","         * __Important__: This instance should not be used after being released","         * @method release","         * @chainable","         */","        release: function () {","            var self = this;","            self._root._poolReturn(self);","            return self;","        },","        /**","         * Returns the parent node for this node or null if none exists.","         * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.","         * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.","         * @method getParent","         * @return FlyweightTreeNode","         */","        getParent: function() {","            var iNode = this._iNode._parent;","            return (iNode?this._root._poolFetch(iNode).hold():null);","        },","        /**","         * Returns the next sibling node for this node or null if none exists.","         * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.","         * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.","         * @method getNextSibling","         * @return FlyweightTreeNode","         */","        getNextSibling: function() {","            var parent = this._iNode._parent,","                siblings = (parent && parent.children),","                index = siblings.indexOf(this._iNode) + 1;","            if (index === 0 || index >= siblings.length) {","                return null;","            }","            return this._root._poolFetch(siblings[index]).hold();","        },","        /**","         * Returns the previous sibling node for this node or null if none exists.","         * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.","         * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.","         * @method getPreviousSibling","         * @return FlyweightTreeNode","         */","        getPreviousSibling: function() {","            var parent = this._iNode._parent,","                siblings = (parent && parent.children),","                index = siblings.indexOf(this._iNode) - 1;","            if (index < 0) {","                return null;","            }","            return this._root._poolFetch(siblings[index]).hold();","        },","        /**","         * Sets the focus to this node.","         * @method focus","         * @chainable","         */","        focus: function() {","            return this._root.set(FOCUSED, this);","        },","        /**","         * Removes the focus from this node","         * @method blur","         * @chainable","         */","        blur: function () {","            return this._root.set(FOCUSED, null);","        },","        /**","         * Sugar method to toggle the expanded state of the node.","         * @method toggle","         * @chainable","         */","        toggle: function() {","            return this.set(EXPANDED, !this.get(EXPANDED));","        },","        /**","         * Sugar method to expand a node","         * @method expand","         * @chainable","         */","        expand: function() {","            return this.set(EXPANDED, true);","        },","        /**","         * Sugar method to collapse this node","         * @method collapse","         * @chainable","         */","        collapse: function() {","            return this.set(EXPANDED, false);","        },","        /**","         * Returns true if this node is the root node","         * @method isRoot","         * @return {Boolean} true if root node","         */","        isRoot: function() {","            return this._root._tree === this._iNode;","        },","","        /**","        * Sets the stored value for the attribute, in either the","        * internal state object, or the state proxy if it exits","        *","        * @method _setStateVal","        * @private","        * @param {String} name The name of the attribute","        * @param {Any} value The value of the attribute","        */","        _setStateVal : function(name, value) {","            var iNode = this._iNode;","            if (this._state.get(name, BYPASS_PROXY) || this._state.get(name, 'initializing') || !iNode) {","                this._state.add(name, VALUE, value);","            } else {","                iNode[name] = value;","            }","        }","    },","    {","        /**","         * Outer template string to be used to render this node.","         * It may be overriden by the subclass.","         *","         * It contains the HTML markup for the wrapper for the node plus placeholders,","         * enclosed in curly braces, that have access to any of the","         * configuration attributes of this node plus several predefined placeholders.","         *","         * It must contain at least three elements identified by their CSS classNames","         * and a special placeholder:","","         +----------------------------+","         | {CNAME_NODE}               |","         | +------------------------+ |","         | | {INNER_TEMPLATE}        | |","         | +------------------------+ |","         |                            |","         | +------------------------+ |","         | | {CNAME_CHILDREN}       | |","         | +------------------------+ |","         +----------------------------+","","         * For example:","","        OUTER_TEMPLATE:'<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\">{INNER_TEMPLATE}' +","                            '<div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>',","","         * The outermost container identified by the className `{CNAME_NODE}`","         * must also use the `{id}` placeholder to set the `id` of the node.","         * It should also have the proper ARIA role assigned and the","         * `aria-expanded` set to the `{expanded}` placeholder.","         *","         * It must contain two further elements:","         *","         * * A placeholder for the INNER_TEMPLATE of this node, identified by the placeholder","         *   `{INNER_TEMPLATE}` which should contain everything the user would associate","         *   with this node, such as the label and other status indicators","         *   such as toggle and selection indicators.","         *","         * * The other element is the container for the children of this node.","         *   It will be identified by the className `{CNAME_CHILDREN}` and it","         *   should enclose the placeholder `{children}`.","         *","         * @property OUTER_TEMPLATE","         * @type {String}","         * @default '<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\"><div tabIndex=\"{tabIndex}\"","         class=\"{CNAME_CONTENT}\">{label}</div><div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>'","         * @static","         */","        OUTER_TEMPLATE:'<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\">{INNER_TEMPLATE}' +","                            '<div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>',","        /**","         * The template for what the user will see of the node.","         * It has been broken appart from the outer template because","         * this is the part that the developer is most likely to modify","         * so that there is no need to repeat the outer envelope over and over again.","         * For example:","         *","            INNER_TEMPLATE:'<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>',","","         * This element must have at least a palceholder for the `{label}` attribute","         * and any other visual clues to the user.  It must also have the CSS className","         * `{CNAME_CONTENT}` which will be replaced by a suitable name at execution","         * and that will help to locate the contents of this node.","         *","         * This is the element that would receive the focus of the node, thus,","         * it must have a `{tabIndex}` placeholder to receive the appropriate","         * value for the `tabIndex` attribute.","         * @property INNER_TEMPLATE","         * @type {String}","         * @default '<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>'","         * @static","         */","        INNER_TEMPLATE:'<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>',","        /**","         * Collection of CSS class names used in the template.","         * It is written all uppercase because its contents are meant to be constants,","         * this object itself being augmented by class names added by its subclasses","         * @attribute CNAMES","         * @type Object","         * @static","         */","        CNAMES: {","            CNAME_NODE: getCName(FWNODE_NAME),","            CNAME_CONTENT: cName('content'),","            CNAME_CHILDREN: cName('children'),","            CNAME_COLLAPSED: cName('collapsed'),","            CNAME_EXPANDED: cName(EXPANDED),","            CNAME_NOCHILDREN: cName('no-children'),","            CNAME_FIRSTCHILD: cName('first-child'),","            CNAME_LASTCHILD: cName('last-child'),","            CNAME_LOADING: cName('loading'),","            CNAME_TYPE_PREFIX: cName('type-')","/*        },","        _buildCfg: {","            // aggregates: ['CNAMES']",""," */       },","        ATTRS: {","            /**","             * Reference to the FlyweightTreeManager this node belongs to","             * @attribute root","             * @type {FlyweightTreeManager}","             * @readOnly","             *","             */","","            root: {","                _bypassProxy: true,","                readOnly: true,","                getter: function() {","                    return this._root;","                }","            },","","            /**","             * Template to use on this particular instance.","             * The renderer will default to the static TEMPLATE property of this class","             * (the preferred way) or the nodeTemplate configuration attribute of the root.","             * See the TEMPLATE static property.","             * @attribute template","             * @type {String}","             * @default undefined","             */","            template: {","                validator: Lang.isString","            },","            /**","             * Label for this node. Nodes usually have some textual content, this is the place for it.","             * @attribute label","             * @type {String}","             * @default ''","             */","            label: {","                setter:String,","                value: ''","            },","            /**","             * Id to assign to the DOM element that contains this node.","             * Once rendered, it cannot be changed.","             * If none was supplied, it will generate one.","             * @attribute id","             * @type {Identifier}","             * @default guid()","             */","            id: {","                validator: function () {","                    return !this._root.get('rendered');","                }","            },","            /**","             * Returns the depth of this node from the root.","             * This is calculated on-the-fly.","             * @attribute depth","             * @type Integer","             * @readOnly","             */","            depth: {","                _bypassProxy: true,","                readOnly: true,","                getter: function () {","                    var count = 0,","                        iNode = this._iNode;","                    while (iNode._parent) {","                        count += 1;","                        iNode = iNode._parent;","                    }","                    return count-1;","                }","            },","            /**","             * Expanded state of this node.","             * @attribute expanded","             * @type Boolean","             * @default true","             */","            expanded: {","                getter: '_expandedGetter'","            }","        }","    }",");","Y.FlyweightTreeNode = FWNode;","","","","}, 'gallery-2012.12.12-21-11', {\"requires\": [\"widget\", \"base-build\"], \"skinnable\": false});","","}());"]};
}
var __cov_7dqSyn62puFHwtb9VoFkBw = __coverage__['build/gallery-flyweight-tree/gallery-flyweight-tree.js'];
__cov_7dqSyn62puFHwtb9VoFkBw.s['1']++;YUI.add('gallery-flyweight-tree',function(Y,NAME){__cov_7dqSyn62puFHwtb9VoFkBw.f['1']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['2']++;'use strict';__cov_7dqSyn62puFHwtb9VoFkBw.s['3']++;var Lang=Y.Lang,YArray=Y.Array,DOT='.',HASH='#',BYPASS_PROXY='_bypassProxy',CBX='contentBox',VALUE='value',EXPANDED='expanded',DYNAMIC_LOADER='dynamicLoader',TABINDEX='tabIndex',FOCUSED='focusedNode',DEFAULT_POOL='_default',getCName=Y.ClassNameManager.getClassName,FWNODE_NAME='flyweight-tree-node',cName=function(name){__cov_7dqSyn62puFHwtb9VoFkBw.f['2']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['4']++;return getCName(FWNODE_NAME,name);},FWMgr,FWNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['5']++;FWMgr=Y.Base.create(NAME,Y.Widget,[],{_tree:null,_pool:null,_domEvents:null,_focusedINode:null,_eventHandles:null,initializer:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['3']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['6']++;this._pool={};__cov_7dqSyn62puFHwtb9VoFkBw.s['7']++;this._eventHandles=[];},destructor:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['4']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['8']++;var pool=this._pool;__cov_7dqSyn62puFHwtb9VoFkBw.s['9']++;Y.Object.each(pool,function(value,key){__cov_7dqSyn62puFHwtb9VoFkBw.f['5']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['10']++;YArray.each(value,function(fwNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['6']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['11']++;fwNode.destroy();});__cov_7dqSyn62puFHwtb9VoFkBw.s['12']++;delete pool[key];});__cov_7dqSyn62puFHwtb9VoFkBw.s['13']++;this._pool=null;__cov_7dqSyn62puFHwtb9VoFkBw.s['14']++;YArray.each(this._eventHandles,function(evHandle){__cov_7dqSyn62puFHwtb9VoFkBw.f['7']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['15']++;evHandle.detach();});__cov_7dqSyn62puFHwtb9VoFkBw.s['16']++;this._eventHandles=null;},_loadConfig:function(tree){__cov_7dqSyn62puFHwtb9VoFkBw.f['8']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['17']++;this._tree={children:Y.clone(tree)};__cov_7dqSyn62puFHwtb9VoFkBw.s['18']++;this._initNodes(this._tree);},_initNodes:function(parentINode){__cov_7dqSyn62puFHwtb9VoFkBw.f['9']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['19']++;var self=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['20']++;YArray.each(parentINode.children,function(iNode,i){__cov_7dqSyn62puFHwtb9VoFkBw.f['10']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['21']++;if(Lang.isString(iNode)){__cov_7dqSyn62puFHwtb9VoFkBw.b['1'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['22']++;iNode={label:iNode};__cov_7dqSyn62puFHwtb9VoFkBw.s['23']++;parentINode.children[i]=iNode;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['1'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['24']++;if(!self._focusedINode){__cov_7dqSyn62puFHwtb9VoFkBw.b['2'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['25']++;self._focusedINode=iNode;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['2'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['26']++;iNode._parent=parentINode;__cov_7dqSyn62puFHwtb9VoFkBw.s['27']++;iNode.id=(__cov_7dqSyn62puFHwtb9VoFkBw.b['3'][0]++,iNode.id)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['3'][1]++,Y.guid());__cov_7dqSyn62puFHwtb9VoFkBw.s['28']++;self._initNodes(iNode);});},renderUI:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['11']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['29']++;var root=this.getRoot();__cov_7dqSyn62puFHwtb9VoFkBw.s['30']++;root._renderChildren(this.get(CBX));__cov_7dqSyn62puFHwtb9VoFkBw.s['31']++;root.release();},bindUI:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['12']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['32']++;var self=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['33']++;self._eventHandles.push(self.after('focus',self._afterFocus));__cov_7dqSyn62puFHwtb9VoFkBw.s['34']++;if(self._domEvents){__cov_7dqSyn62puFHwtb9VoFkBw.b['4'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['35']++;YArray.each(self._domEvents,function(event){__cov_7dqSyn62puFHwtb9VoFkBw.f['13']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['36']++;self._eventHandles.push(self.after(event,self._afterDomEvent,self));});}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['4'][1]++;}},fire:function(type,ev){__cov_7dqSyn62puFHwtb9VoFkBw.f['14']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['37']++;var ret,self=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['38']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['6'][0]++,ev)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['6'][1]++,ev.domEvent)){__cov_7dqSyn62puFHwtb9VoFkBw.b['5'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['39']++;ev.node=self._poolFetchFromEvent(ev);__cov_7dqSyn62puFHwtb9VoFkBw.s['40']++;ret=FWMgr.superclass.fire.call(self,type,ev);__cov_7dqSyn62puFHwtb9VoFkBw.s['41']++;if(ev.node){__cov_7dqSyn62puFHwtb9VoFkBw.b['7'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['42']++;self._poolReturn(ev.node);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['7'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['43']++;return ret;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['5'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['44']++;return FWMgr.superclass.fire.apply(self,arguments);},expandAll:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['15']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['45']++;this.forSomeNodes(function(node){__cov_7dqSyn62puFHwtb9VoFkBw.f['16']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['46']++;node.set(EXPANDED,true);});},collapseAll:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['17']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['47']++;this.forSomeNodes(function(node){__cov_7dqSyn62puFHwtb9VoFkBw.f['18']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['48']++;node.set(EXPANDED,false);});},getNodeBy:function(attr,value){__cov_7dqSyn62puFHwtb9VoFkBw.f['19']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['49']++;var fn,found=null;__cov_7dqSyn62puFHwtb9VoFkBw.s['50']++;switch(Lang.type(attr)){case'function':__cov_7dqSyn62puFHwtb9VoFkBw.b['8'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['51']++;fn=attr;__cov_7dqSyn62puFHwtb9VoFkBw.s['52']++;break;case'string':__cov_7dqSyn62puFHwtb9VoFkBw.b['8'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['53']++;fn=function(node){__cov_7dqSyn62puFHwtb9VoFkBw.f['20']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['54']++;return node.get(attr)===value;};__cov_7dqSyn62puFHwtb9VoFkBw.s['55']++;break;default:__cov_7dqSyn62puFHwtb9VoFkBw.b['8'][2]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['56']++;return null;}__cov_7dqSyn62puFHwtb9VoFkBw.s['57']++;this.forSomeNodes(function(node){__cov_7dqSyn62puFHwtb9VoFkBw.f['21']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['58']++;if(fn(node)){__cov_7dqSyn62puFHwtb9VoFkBw.b['9'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['59']++;found=node;__cov_7dqSyn62puFHwtb9VoFkBw.s['60']++;found.hold();__cov_7dqSyn62puFHwtb9VoFkBw.s['61']++;return true;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['9'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['62']++;return false;});__cov_7dqSyn62puFHwtb9VoFkBw.s['63']++;return found;},_afterDomEvent:function(ev){__cov_7dqSyn62puFHwtb9VoFkBw.f['22']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['64']++;var fwNode=ev.node;__cov_7dqSyn62puFHwtb9VoFkBw.s['65']++;if(fwNode){__cov_7dqSyn62puFHwtb9VoFkBw.b['10'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['66']++;fwNode.fire(ev.type.split(':')[1],{domEvent:ev.domEvent});}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['10'][1]++;}},_getTypeString:function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['23']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['67']++;var type=iNode.type;__cov_7dqSyn62puFHwtb9VoFkBw.s['68']++;if(!type){__cov_7dqSyn62puFHwtb9VoFkBw.b['11'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['69']++;return DEFAULT_POOL;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['11'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['70']++;if(typeof type==='string'){__cov_7dqSyn62puFHwtb9VoFkBw.b['12'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['71']++;if(!Y[type]){__cov_7dqSyn62puFHwtb9VoFkBw.b['13'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['72']++;throw new TypeError('Missing node class: Y.'+type);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['13'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['73']++;type=Y[type];}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['12'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['74']++;type=type.NAME;__cov_7dqSyn62puFHwtb9VoFkBw.s['75']++;if(!type){__cov_7dqSyn62puFHwtb9VoFkBw.b['14'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['76']++;throw new TypeError('Node contains unknown type');}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['14'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['77']++;return type;},_poolFetch:function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['24']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['78']++;var pool,fwNode=iNode._nodeInstance,type=this._getTypeString(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['79']++;if(!fwNode){__cov_7dqSyn62puFHwtb9VoFkBw.b['15'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['80']++;pool=this._pool[type];__cov_7dqSyn62puFHwtb9VoFkBw.s['81']++;if(pool===undefined){__cov_7dqSyn62puFHwtb9VoFkBw.b['16'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['82']++;pool=this._pool[type]=[];}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['16'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['83']++;if(pool.length){__cov_7dqSyn62puFHwtb9VoFkBw.b['17'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['84']++;fwNode=pool.pop();__cov_7dqSyn62puFHwtb9VoFkBw.s['85']++;fwNode._slideTo(iNode);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['17'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['86']++;fwNode=this._createNode(iNode);}}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['15'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['87']++;iNode._refCount=((__cov_7dqSyn62puFHwtb9VoFkBw.b['18'][0]++,iNode._refCount)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['18'][1]++,0))+1;__cov_7dqSyn62puFHwtb9VoFkBw.s['88']++;return fwNode;},_poolReturn:function(fwNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['25']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['89']++;var pool,iNode=fwNode._iNode,type=this._getTypeString(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['90']++;iNode._refCount-=1;__cov_7dqSyn62puFHwtb9VoFkBw.s['91']++;if(iNode._refCount){__cov_7dqSyn62puFHwtb9VoFkBw.b['19'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['92']++;return;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['19'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['93']++;fwNode._iNode=null;__cov_7dqSyn62puFHwtb9VoFkBw.s['94']++;iNode._nodeInstance=null;__cov_7dqSyn62puFHwtb9VoFkBw.s['95']++;pool=this._pool[type];__cov_7dqSyn62puFHwtb9VoFkBw.s['96']++;if(pool){__cov_7dqSyn62puFHwtb9VoFkBw.b['20'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['97']++;pool.push(fwNode);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['20'][1]++;}},_createNode:function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['26']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['98']++;var newNode,Type=(__cov_7dqSyn62puFHwtb9VoFkBw.b['21'][0]++,iNode.type)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['21'][1]++,this.get('defaultType'));__cov_7dqSyn62puFHwtb9VoFkBw.s['99']++;if(Lang.isString(Type)){__cov_7dqSyn62puFHwtb9VoFkBw.b['22'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['100']++;Type=Y[Type];}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['22'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['101']++;if(Type){__cov_7dqSyn62puFHwtb9VoFkBw.b['23'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['102']++;newNode=new Type({root:this});__cov_7dqSyn62puFHwtb9VoFkBw.s['103']++;if(newNode instanceof Y.FlyweightTreeNode){__cov_7dqSyn62puFHwtb9VoFkBw.b['24'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['104']++;newNode._slideTo({});__cov_7dqSyn62puFHwtb9VoFkBw.s['105']++;YArray.each(Y.Object.keys(newNode._state.data),newNode._addLazyAttr,newNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['106']++;newNode._root=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['107']++;newNode._slideTo(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['108']++;return newNode;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['24'][1]++;}}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['23'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['109']++;return null;},getRoot:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['27']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['110']++;return this._poolFetch(this._tree).hold();},_findINodeByElement:function(el){__cov_7dqSyn62puFHwtb9VoFkBw.f['28']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['111']++;var id,found=null,scan=function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['29']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['112']++;if(iNode.id===id){__cov_7dqSyn62puFHwtb9VoFkBw.b['25'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['113']++;found=iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['114']++;return true;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['25'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['115']++;if(iNode.children){__cov_7dqSyn62puFHwtb9VoFkBw.b['26'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['116']++;return YArray.some(iNode.children,scan);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['26'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['117']++;return false;};__cov_7dqSyn62puFHwtb9VoFkBw.s['118']++;el=el.ancestor(DOT+FWNode.CNAMES.CNAME_NODE,true);__cov_7dqSyn62puFHwtb9VoFkBw.s['119']++;if(el){__cov_7dqSyn62puFHwtb9VoFkBw.b['27'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['120']++;id=el.get('id');__cov_7dqSyn62puFHwtb9VoFkBw.s['121']++;if(scan(this._tree)){__cov_7dqSyn62puFHwtb9VoFkBw.b['28'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['122']++;return found;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['28'][1]++;}}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['27'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['123']++;return null;},_poolFetchFromEvent:function(ev){__cov_7dqSyn62puFHwtb9VoFkBw.f['30']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['124']++;var found=this._findINodeByElement(ev.domEvent.target);__cov_7dqSyn62puFHwtb9VoFkBw.s['125']++;if(found){__cov_7dqSyn62puFHwtb9VoFkBw.b['29'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['126']++;return this._poolFetch(found);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['29'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['127']++;return null;},_forSomeINode:function(fn,scope){__cov_7dqSyn62puFHwtb9VoFkBw.f['31']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['128']++;scope=(__cov_7dqSyn62puFHwtb9VoFkBw.b['30'][0]++,scope)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['30'][1]++,this);__cov_7dqSyn62puFHwtb9VoFkBw.s['129']++;var loop=function(iNode,depth){__cov_7dqSyn62puFHwtb9VoFkBw.f['32']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['130']++;return YArray.some((__cov_7dqSyn62puFHwtb9VoFkBw.b['31'][0]++,iNode.children)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['31'][1]++,[]),function(childINode,index){__cov_7dqSyn62puFHwtb9VoFkBw.f['33']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['131']++;if(fn.call(scope,childINode,depth,index)){__cov_7dqSyn62puFHwtb9VoFkBw.b['32'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['132']++;return true;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['32'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['133']++;return loop(childINode,depth+1);});};__cov_7dqSyn62puFHwtb9VoFkBw.s['134']++;return loop(this._tree,0);},forSomeNodes:function(fn,scope){__cov_7dqSyn62puFHwtb9VoFkBw.f['34']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['135']++;scope=(__cov_7dqSyn62puFHwtb9VoFkBw.b['33'][0]++,scope)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['33'][1]++,this);__cov_7dqSyn62puFHwtb9VoFkBw.s['136']++;var root=this.getRoot(),forOneLevel=function(fwNode,depth){__cov_7dqSyn62puFHwtb9VoFkBw.f['35']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['137']++;fwNode.forSomeChildren(function(fwNode,index,array){__cov_7dqSyn62puFHwtb9VoFkBw.f['36']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['138']++;if(fn.call(scope,fwNode,depth,index,array)===true){__cov_7dqSyn62puFHwtb9VoFkBw.b['34'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['139']++;return true;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['34'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['140']++;return forOneLevel(fwNode,depth+1);});},ret=forOneLevel(root,0);__cov_7dqSyn62puFHwtb9VoFkBw.s['141']++;root.release();__cov_7dqSyn62puFHwtb9VoFkBw.s['142']++;return ret;},_focusedNodeGetter:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['37']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['143']++;return this._poolFetch(this._focusedINode).hold();},_focusedNodeSetter:function(value){__cov_7dqSyn62puFHwtb9VoFkBw.f['38']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['144']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['36'][0]++,!value)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['36'][1]++,value instanceof Y.FlyweightTreeNode)){__cov_7dqSyn62puFHwtb9VoFkBw.b['35'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['145']++;var newINode=value?(__cov_7dqSyn62puFHwtb9VoFkBw.b['37'][0]++,value._iNode):(__cov_7dqSyn62puFHwtb9VoFkBw.b['37'][1]++,this._tree.children[0]);__cov_7dqSyn62puFHwtb9VoFkBw.s['146']++;this._focusOnINode(newINode);__cov_7dqSyn62puFHwtb9VoFkBw.s['147']++;return newINode;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['35'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['148']++;return Y.Attribute.INVALID_VALUE;}},_focusOnINode:function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['39']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['149']++;var prevINode=this._focusedINode,el,self=this,expand=function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['40']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['150']++;iNode=iNode._parent;__cov_7dqSyn62puFHwtb9VoFkBw.s['151']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['39'][0]++,iNode)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['39'][1]++,iNode._parent)){__cov_7dqSyn62puFHwtb9VoFkBw.b['38'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['152']++;expand(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['153']++;self._poolReturn(self._poolFetch(iNode).set(EXPANDED,true));}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['38'][1]++;}};__cov_7dqSyn62puFHwtb9VoFkBw.s['154']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['41'][0]++,iNode)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['41'][1]++,iNode!==prevINode)){__cov_7dqSyn62puFHwtb9VoFkBw.b['40'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['155']++;el=Y.one(HASH+prevINode.id+' .'+FWNode.CNAMES.CNAME_CONTENT);__cov_7dqSyn62puFHwtb9VoFkBw.s['156']++;el.blur();__cov_7dqSyn62puFHwtb9VoFkBw.s['157']++;el.set(TABINDEX,-1);__cov_7dqSyn62puFHwtb9VoFkBw.s['158']++;expand(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['159']++;el=Y.one(HASH+iNode.id+' .'+FWNode.CNAMES.CNAME_CONTENT);__cov_7dqSyn62puFHwtb9VoFkBw.s['160']++;el.focus();__cov_7dqSyn62puFHwtb9VoFkBw.s['161']++;el.set(TABINDEX,0);__cov_7dqSyn62puFHwtb9VoFkBw.s['162']++;self._focusedINode=iNode;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['40'][1]++;}},_dynamicLoaderSetter:function(value){__cov_7dqSyn62puFHwtb9VoFkBw.f['41']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['163']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['43'][0]++,!Lang.isFunction(value))&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['43'][1]++,value!==null)){__cov_7dqSyn62puFHwtb9VoFkBw.b['42'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['164']++;return Y.Attribute.INVALID_VALUE;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['42'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['165']++;return value;}},{ATTRS:{defaultType:{value:'FlyweightTreeNode'},dynamicLoader:{value:null,setter:'_dynamicLoaderSetter'},focusedNode:{getter:'_focusedNodeGetter',setter:'_focusedNodeSetter'}}});__cov_7dqSyn62puFHwtb9VoFkBw.s['166']++;Y.FlyweightTreeManager=FWMgr;__cov_7dqSyn62puFHwtb9VoFkBw.s['167']++;FWNode=Y.Base.create(FWNODE_NAME,Y.Base,[],{_iNode:null,_root:null,initializer:function(cfg){__cov_7dqSyn62puFHwtb9VoFkBw.f['42']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['168']++;this._root=cfg.root;__cov_7dqSyn62puFHwtb9VoFkBw.s['169']++;this.after('expandedChange',this._afterExpandedChange);__cov_7dqSyn62puFHwtb9VoFkBw.s['170']++;this.after('labelChange',this._afterLabelChange);__cov_7dqSyn62puFHwtb9VoFkBw.s['171']++;this._buildCfgPatch();},_buildCfgPatch:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['43']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['172']++;var cnames={},it,ot,constr=this.constructor;__cov_7dqSyn62puFHwtb9VoFkBw.s['173']++;YArray.each(this._classes,function(c){__cov_7dqSyn62puFHwtb9VoFkBw.f['44']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['174']++;Y.mix(cnames,c.CNAMES);__cov_7dqSyn62puFHwtb9VoFkBw.s['175']++;it=(__cov_7dqSyn62puFHwtb9VoFkBw.b['44'][0]++,it)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['44'][1]++,c.INNER_TEMPLATE);__cov_7dqSyn62puFHwtb9VoFkBw.s['176']++;ot=(__cov_7dqSyn62puFHwtb9VoFkBw.b['45'][0]++,ot)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['45'][1]++,c.OUTER_TEMPLATE);});__cov_7dqSyn62puFHwtb9VoFkBw.s['177']++;constr.CNAMES=cnames;__cov_7dqSyn62puFHwtb9VoFkBw.s['178']++;constr.INNER_TEMPLATE=it;__cov_7dqSyn62puFHwtb9VoFkBw.s['179']++;constr.OUTER_TEMPLATE=ot;},_getHTML:function(index,nSiblings,depth){__cov_7dqSyn62puFHwtb9VoFkBw.f['45']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['180']++;var root=this._root,iNode=this._iNode,attrs=this.getAttrs(),s='',childCount=(__cov_7dqSyn62puFHwtb9VoFkBw.b['46'][0]++,iNode.children)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['46'][1]++,iNode.children.length),CNAMES=this.constructor.CNAMES,nodeClasses=[CNAMES.CNAME_NODE],templ,it=(__cov_7dqSyn62puFHwtb9VoFkBw.b['47'][0]++,iNode.inner_template)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['47'][1]++,this.constructor.INNER_TEMPLATE),ot=(__cov_7dqSyn62puFHwtb9VoFkBw.b['48'][0]++,iNode.outer_template)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['48'][1]++,this.constructor.OUTER_TEMPLATE);__cov_7dqSyn62puFHwtb9VoFkBw.s['181']++;templ=ot.replace('{INNER_TEMPLATE}',it);__cov_7dqSyn62puFHwtb9VoFkBw.s['182']++;Y.mix(attrs,CNAMES);__cov_7dqSyn62puFHwtb9VoFkBw.s['183']++;iNode._rendered=true;__cov_7dqSyn62puFHwtb9VoFkBw.s['184']++;if(childCount){__cov_7dqSyn62puFHwtb9VoFkBw.b['49'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['185']++;if(attrs[EXPANDED]){__cov_7dqSyn62puFHwtb9VoFkBw.b['50'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['186']++;iNode._childrenRendered=true;__cov_7dqSyn62puFHwtb9VoFkBw.s['187']++;this.forSomeChildren(function(fwNode,index,array){__cov_7dqSyn62puFHwtb9VoFkBw.f['46']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['188']++;s+=fwNode._getHTML(index,array.length,depth+1);});__cov_7dqSyn62puFHwtb9VoFkBw.s['189']++;nodeClasses.push(CNAMES.CNAME_EXPANDED);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['50'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['190']++;nodeClasses.push(CNAMES.CNAME_COLLAPSED);}}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['49'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['191']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['52'][0]++,this._root.get(DYNAMIC_LOADER))&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['52'][1]++,!iNode.isLeaf)){__cov_7dqSyn62puFHwtb9VoFkBw.b['51'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['192']++;nodeClasses.push(CNAMES.CNAME_COLLAPSED);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['51'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['193']++;nodeClasses.push(CNAMES.CNAME_NOCHILDREN);}}__cov_7dqSyn62puFHwtb9VoFkBw.s['194']++;if(index===0){__cov_7dqSyn62puFHwtb9VoFkBw.b['53'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['195']++;nodeClasses.push(CNAMES.CNAME_FIRSTCHILD);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['53'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['196']++;if(index===nSiblings-1){__cov_7dqSyn62puFHwtb9VoFkBw.b['54'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['197']++;nodeClasses.push(CNAMES.CNAME_LASTCHILD);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['54'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['198']++;if(iNode.type){__cov_7dqSyn62puFHwtb9VoFkBw.b['55'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['199']++;nodeClasses.push(CNAMES.CNAME_TYPE_PREFIX+root._getTypeString(iNode));}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['55'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['200']++;attrs.children=s;__cov_7dqSyn62puFHwtb9VoFkBw.s['201']++;attrs.CNAME_NODE=nodeClasses.join(' ');__cov_7dqSyn62puFHwtb9VoFkBw.s['202']++;attrs.tabIndex=iNode===root._focusedINode?(__cov_7dqSyn62puFHwtb9VoFkBw.b['56'][0]++,0):(__cov_7dqSyn62puFHwtb9VoFkBw.b['56'][1]++,-1);__cov_7dqSyn62puFHwtb9VoFkBw.s['203']++;return Lang.sub(templ,attrs);},_slideTo:function(iNode){__cov_7dqSyn62puFHwtb9VoFkBw.f['47']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['204']++;iNode._nodeInstance=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['205']++;this._iNode=iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['206']++;this._stateProxy=iNode;},hasChildren:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['48']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['207']++;var children=this._iNode.children;__cov_7dqSyn62puFHwtb9VoFkBw.s['208']++;return!!((__cov_7dqSyn62puFHwtb9VoFkBw.b['57'][0]++,children)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['57'][1]++,children.length));},forSomeChildren:function(fn,scope){__cov_7dqSyn62puFHwtb9VoFkBw.f['49']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['209']++;var root=this._root,children=this._iNode.children,child,ret;__cov_7dqSyn62puFHwtb9VoFkBw.s['210']++;scope=(__cov_7dqSyn62puFHwtb9VoFkBw.b['58'][0]++,scope)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['58'][1]++,this);__cov_7dqSyn62puFHwtb9VoFkBw.s['211']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['60'][0]++,children)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['60'][1]++,children.length)){__cov_7dqSyn62puFHwtb9VoFkBw.b['59'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['212']++;YArray.some(children,function(iNode,index,array){__cov_7dqSyn62puFHwtb9VoFkBw.f['50']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['213']++;child=root._poolFetch(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['214']++;ret=fn.call(scope,child,index,array);__cov_7dqSyn62puFHwtb9VoFkBw.s['215']++;root._poolReturn(child);__cov_7dqSyn62puFHwtb9VoFkBw.s['216']++;return ret;});}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['59'][1]++;}},_afterLabelChange:function(ev){__cov_7dqSyn62puFHwtb9VoFkBw.f['51']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['217']++;var el=Y.one(HASH+this._iNode.id+' .'+FWNode.CNAMES.CNAME_CONTENT);__cov_7dqSyn62puFHwtb9VoFkBw.s['218']++;if(el){__cov_7dqSyn62puFHwtb9VoFkBw.b['61'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['219']++;el.setHTML(ev.newVal);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['61'][1]++;}},_expandedGetter:function(value){__cov_7dqSyn62puFHwtb9VoFkBw.f['52']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['220']++;var iNode=this._iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['221']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['63'][0]++,!!this._root.get(DYNAMIC_LOADER))&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['63'][1]++,!iNode.children)){__cov_7dqSyn62puFHwtb9VoFkBw.b['62'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['222']++;return!!iNode.isLeaf;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['62'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['223']++;return(__cov_7dqSyn62puFHwtb9VoFkBw.b['64'][0]++,value===undefined)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['64'][1]++,!!value);}},_afterExpandedChange:function(ev){__cov_7dqSyn62puFHwtb9VoFkBw.f['53']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['224']++;var value=!!ev.newVal,self=this,iNode=self._iNode,root=self._root,el=Y.one(HASH+iNode.id),dynLoader=root.get(DYNAMIC_LOADER),CEXP=FWNode.CNAMES.CNAME_EXPANDED,CCOLL=FWNode.CNAMES.CNAME_COLLAPSED;__cov_7dqSyn62puFHwtb9VoFkBw.s['225']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['66'][0]++,dynLoader)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['66'][1]++,!iNode.isLeaf)&&((__cov_7dqSyn62puFHwtb9VoFkBw.b['66'][2]++,!iNode.children)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['66'][3]++,!iNode.children.length))){__cov_7dqSyn62puFHwtb9VoFkBw.b['65'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['226']++;this._loadDynamic();__cov_7dqSyn62puFHwtb9VoFkBw.s['227']++;return;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['65'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['228']++;if(el){__cov_7dqSyn62puFHwtb9VoFkBw.b['67'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['229']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['69'][0]++,iNode.children)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['69'][1]++,iNode.children.length)){__cov_7dqSyn62puFHwtb9VoFkBw.b['68'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['230']++;if(value){__cov_7dqSyn62puFHwtb9VoFkBw.b['70'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['231']++;if(!iNode._childrenRendered){__cov_7dqSyn62puFHwtb9VoFkBw.b['71'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['232']++;self._renderChildren();}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['71'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['233']++;el.replaceClass(CCOLL,CEXP);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['70'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['234']++;el.replaceClass(CEXP,CCOLL);}}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['68'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['235']++;el.set('aria-expanded',String(value));}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['67'][1]++;}},_loadDynamic:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['54']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['236']++;var self=this,root=self._root;__cov_7dqSyn62puFHwtb9VoFkBw.s['237']++;Y.one(HASH+this.get('id')).replaceClass(FWNode.CNAMES.CNAME_COLLAPSED,FWNode.CNAMES.CNAME_LOADING);__cov_7dqSyn62puFHwtb9VoFkBw.s['238']++;root.get(DYNAMIC_LOADER).call(root,self,Y.bind(self._dynamicLoadReturn,self));},_dynamicLoadReturn:function(response){__cov_7dqSyn62puFHwtb9VoFkBw.f['55']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['239']++;var self=this,iNode=self._iNode,root=self._root,CNAMES=FWNode.CNAMES;__cov_7dqSyn62puFHwtb9VoFkBw.s['240']++;if(response){__cov_7dqSyn62puFHwtb9VoFkBw.b['72'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['241']++;iNode.children=response;__cov_7dqSyn62puFHwtb9VoFkBw.s['242']++;root._initNodes(iNode);__cov_7dqSyn62puFHwtb9VoFkBw.s['243']++;self._renderChildren();}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['72'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['244']++;iNode.isLeaf=true;}__cov_7dqSyn62puFHwtb9VoFkBw.s['245']++;Y.one(HASH+iNode.id).replaceClass(CNAMES.CNAME_LOADING,iNode.isLeaf?(__cov_7dqSyn62puFHwtb9VoFkBw.b['73'][0]++,CNAMES.CNAME_NOCHILDREN):(__cov_7dqSyn62puFHwtb9VoFkBw.b['73'][1]++,CNAMES.CNAME_EXPANDED));},_renderChildren:function(el){__cov_7dqSyn62puFHwtb9VoFkBw.f['56']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['246']++;var s='',iNode=this._iNode,depth=this.get('depth');__cov_7dqSyn62puFHwtb9VoFkBw.s['247']++;iNode._childrenRendered=true;__cov_7dqSyn62puFHwtb9VoFkBw.s['248']++;this.forSomeChildren(function(fwNode,index,array){__cov_7dqSyn62puFHwtb9VoFkBw.f['57']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['249']++;s+=fwNode._getHTML(index,array.length,depth+1);});__cov_7dqSyn62puFHwtb9VoFkBw.s['250']++;el=(__cov_7dqSyn62puFHwtb9VoFkBw.b['74'][0]++,el)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['74'][1]++,Y.one(HASH+iNode.id+' .'+FWNode.CNAMES.CNAME_CHILDREN));__cov_7dqSyn62puFHwtb9VoFkBw.s['251']++;el.setHTML(s);},hold:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['58']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['252']++;var self=this,iNode=self._iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['253']++;iNode._refCount+=1;__cov_7dqSyn62puFHwtb9VoFkBw.s['254']++;return self;},release:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['59']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['255']++;var self=this;__cov_7dqSyn62puFHwtb9VoFkBw.s['256']++;self._root._poolReturn(self);__cov_7dqSyn62puFHwtb9VoFkBw.s['257']++;return self;},getParent:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['60']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['258']++;var iNode=this._iNode._parent;__cov_7dqSyn62puFHwtb9VoFkBw.s['259']++;return iNode?(__cov_7dqSyn62puFHwtb9VoFkBw.b['75'][0]++,this._root._poolFetch(iNode).hold()):(__cov_7dqSyn62puFHwtb9VoFkBw.b['75'][1]++,null);},getNextSibling:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['61']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['260']++;var parent=this._iNode._parent,siblings=(__cov_7dqSyn62puFHwtb9VoFkBw.b['76'][0]++,parent)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['76'][1]++,parent.children),index=siblings.indexOf(this._iNode)+1;__cov_7dqSyn62puFHwtb9VoFkBw.s['261']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['78'][0]++,index===0)||(__cov_7dqSyn62puFHwtb9VoFkBw.b['78'][1]++,index>=siblings.length)){__cov_7dqSyn62puFHwtb9VoFkBw.b['77'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['262']++;return null;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['77'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['263']++;return this._root._poolFetch(siblings[index]).hold();},getPreviousSibling:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['62']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['264']++;var parent=this._iNode._parent,siblings=(__cov_7dqSyn62puFHwtb9VoFkBw.b['79'][0]++,parent)&&(__cov_7dqSyn62puFHwtb9VoFkBw.b['79'][1]++,parent.children),index=siblings.indexOf(this._iNode)-1;__cov_7dqSyn62puFHwtb9VoFkBw.s['265']++;if(index<0){__cov_7dqSyn62puFHwtb9VoFkBw.b['80'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['266']++;return null;}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['80'][1]++;}__cov_7dqSyn62puFHwtb9VoFkBw.s['267']++;return this._root._poolFetch(siblings[index]).hold();},focus:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['63']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['268']++;return this._root.set(FOCUSED,this);},blur:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['64']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['269']++;return this._root.set(FOCUSED,null);},toggle:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['65']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['270']++;return this.set(EXPANDED,!this.get(EXPANDED));},expand:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['66']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['271']++;return this.set(EXPANDED,true);},collapse:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['67']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['272']++;return this.set(EXPANDED,false);},isRoot:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['68']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['273']++;return this._root._tree===this._iNode;},_setStateVal:function(name,value){__cov_7dqSyn62puFHwtb9VoFkBw.f['69']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['274']++;var iNode=this._iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['275']++;if((__cov_7dqSyn62puFHwtb9VoFkBw.b['82'][0]++,this._state.get(name,BYPASS_PROXY))||(__cov_7dqSyn62puFHwtb9VoFkBw.b['82'][1]++,this._state.get(name,'initializing'))||(__cov_7dqSyn62puFHwtb9VoFkBw.b['82'][2]++,!iNode)){__cov_7dqSyn62puFHwtb9VoFkBw.b['81'][0]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['276']++;this._state.add(name,VALUE,value);}else{__cov_7dqSyn62puFHwtb9VoFkBw.b['81'][1]++;__cov_7dqSyn62puFHwtb9VoFkBw.s['277']++;iNode[name]=value;}}},{OUTER_TEMPLATE:'<div id="{id}" class="{CNAME_NODE}" role="" aria-expanded="{expanded}">{INNER_TEMPLATE}'+'<div class="{CNAME_CHILDREN}" role="group">{children}</div></div>',INNER_TEMPLATE:'<div tabIndex="{tabIndex}" class="{CNAME_CONTENT}">{label}</div>',CNAMES:{CNAME_NODE:getCName(FWNODE_NAME),CNAME_CONTENT:cName('content'),CNAME_CHILDREN:cName('children'),CNAME_COLLAPSED:cName('collapsed'),CNAME_EXPANDED:cName(EXPANDED),CNAME_NOCHILDREN:cName('no-children'),CNAME_FIRSTCHILD:cName('first-child'),CNAME_LASTCHILD:cName('last-child'),CNAME_LOADING:cName('loading'),CNAME_TYPE_PREFIX:cName('type-')},ATTRS:{root:{_bypassProxy:true,readOnly:true,getter:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['70']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['278']++;return this._root;}},template:{validator:Lang.isString},label:{setter:String,value:''},id:{validator:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['71']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['279']++;return!this._root.get('rendered');}},depth:{_bypassProxy:true,readOnly:true,getter:function(){__cov_7dqSyn62puFHwtb9VoFkBw.f['72']++;__cov_7dqSyn62puFHwtb9VoFkBw.s['280']++;var count=0,iNode=this._iNode;__cov_7dqSyn62puFHwtb9VoFkBw.s['281']++;while(iNode._parent){__cov_7dqSyn62puFHwtb9VoFkBw.s['282']++;count+=1;__cov_7dqSyn62puFHwtb9VoFkBw.s['283']++;iNode=iNode._parent;}__cov_7dqSyn62puFHwtb9VoFkBw.s['284']++;return count-1;}},expanded:{getter:'_expandedGetter'}}});__cov_7dqSyn62puFHwtb9VoFkBw.s['285']++;Y.FlyweightTreeNode=FWNode;},'gallery-2012.12.12-21-11',{'requires':['widget','base-build'],'skinnable':false});
